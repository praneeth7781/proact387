[{"/mnt/wsl/new/proact387/client/src/index.js":"1","/mnt/wsl/new/proact387/client/src/App.js":"2","/mnt/wsl/new/proact387/client/src/reportWebVitals.js":"3","/mnt/wsl/new/proact387/client/src/components/login.js":"4","/mnt/wsl/new/proact387/client/src/components/landingpage.js":"5","/mnt/wsl/new/proact387/client/src/components/dashboard.js":"6","/mnt/wsl/new/proact387/client/src/components/parentdetails.js":"7","/mnt/wsl/new/proact387/client/src/components/infogather.js":"8","/mnt/wsl/new/proact387/client/src/components/instructor1.js":"9","/mnt/wsl/new/proact387/client/src/components/course.js":"10","/mnt/wsl/new/proact387/client/src/components/insights.js":"11","/mnt/wsl/new/proact387/client/src/components/navbar.js":"12","/mnt/wsl/new/proact387/client/src/components/side_bar.js":"13","/mnt/wsl/new/proact387/client/src/components/courses.js":"14"},{"size":535,"mtime":1682530386613,"results":"15","hashOfConfig":"16"},{"size":2347,"mtime":1682531407733,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1682530386613,"results":"18","hashOfConfig":"16"},{"size":7509,"mtime":1682530386613,"results":"19","hashOfConfig":"16"},{"size":2204,"mtime":1682530386613,"results":"20","hashOfConfig":"16"},{"size":7809,"mtime":1682530386613,"results":"21","hashOfConfig":"16"},{"size":7014,"mtime":1682530386613,"results":"22","hashOfConfig":"16"},{"size":12132,"mtime":1682530386613,"results":"23","hashOfConfig":"16"},{"size":4709,"mtime":1682530944693,"results":"24","hashOfConfig":"16"},{"size":6469,"mtime":1682530386613,"results":"25","hashOfConfig":"16"},{"size":1899,"mtime":1682530386613,"results":"26","hashOfConfig":"16"},{"size":5226,"mtime":1682531487163,"results":"27","hashOfConfig":"16"},{"size":11053,"mtime":1682531010493,"results":"28","hashOfConfig":"16"},{"size":7120,"mtime":1682531641663,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"ywxvgb",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"33"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"33"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/wsl/new/proact387/client/src/index.js",[],[],[],"/mnt/wsl/new/proact387/client/src/App.js",[],[],"/mnt/wsl/new/proact387/client/src/reportWebVitals.js",[],[],"/mnt/wsl/new/proact387/client/src/components/login.js",["80","81","82","83","84"],[],"import React, { useEffect, useState } from 'react';\nimport Axios from \"axios\";\nimport styles from \"../style/login.css\"\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction Login() {\n\n  Axios.defaults.withCredentials = true;\n  var navigate = useNavigate();\n  const [rollnumreg, setRollNumReg] = useState(\"\");\n  const [passwordreg, setPasswordReg] = useState(\"\");\n  const [namereg, setNameReg] = useState(\"\");\n  const [passwordtype, setPasswordType] = useState(\"password\");\n  // const [hostelnumreg, setHostelNumReg] = useState(\"\");\n  // const [roomnumreg, setRoomNumReg] = useState(\"\");\n\n  const [useridlog, setUserIDLog] = useState(\"\");\n  const [passwordlog, setPasswordLog] = useState(\"\");\n\n\n  const passwordtoggle = (e) => {\n    e.preventDefault();\n    if (passwordtype === \"password\") {\n      setPasswordType(\"text\");\n    } else {\n      setPasswordType(\"password\");\n    }\n  }\n\n  const studentlogin = async (e) => {\n    e.preventDefault();\n    console.log(e);\n    console.log(\"Entered client-side student login\");\n    var wait = await Axios.post(\"http://localhost:8000/studentlogin\", {\n      user_id: useridlog,\n      password: passwordlog,\n    }).then((response) => {\n      console.log(\"Response received: \" + response);\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n      } else {\n        console.log(response);\n        if (response.data.pres) {\n          setLoginStatus(response.data.resul.rows[0].user_id);\n          navigate('/dashboard');\n        }\n        else {\n          navigate('/infogather');\n        }\n      }\n    });\n  }\n\n  const instlogin = async (e) => {\n    e.preventDefault();\n    console.log(\"Entered client-side instructor login\");\n    var wait = await Axios.post(\"http://localhost:8000/instlogin\", {\n      user_id: useridlog,\n      password: passwordlog,\n    }).then((response) => {\n      console.log(\"Response received: \" + response);\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n      } else if (response.data.success) {\n        navigate('/instructor');\n      }\n    });\n  }\n\n\n  const [loginStatus, setLoginStatus] = useState(\"\");\n  const [registerStatus, setRegisterStatus] = useState(false);\n  const [Status, setStatus] = useState(false);\n\n  const register = async (e) => {\n    e.preventDefault();\n    var wait = await Axios.post(\"http://localhost:8000/register\", {\n      rollnumber: rollnumreg,\n      password: passwordreg,\n      name: namereg,\n    }).then((response) => {\n      setRegisterStatus(true);\n      console.log(response);\n      window.location.reload();\n\n    })\n  }\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:8000/login\").then((response) => {\n      if (response.data.loggedIn === true) {\n        setLoginStatus(response.data.user.rows[0].userID);\n        setStatus(true);\n        console.log(Status);\n      }\n    });\n  }, [Status, registerStatus]);\n\n  const [distog, setDisTog] = useState(false); //false is for student\n\n  const distogglestud = (e) => {\n    e.preventDefault();\n    setDisTog(false);\n  }\n\n  const distoggleinst = (e) => {\n    e.preventDefault();\n    setDisTog(true);\n  }\n\n  const handleToggle = (e) => {\n    e.preventDefault();\n    setTogActive(!togActive);\n  }\n  const [togActive, setTogActive] = useState(false);//false is for signIn\n  return (\n    Status ?\n      navigate(\"/redirect\") :\n      <div className='body'>\n\n        <div className=\"main\">\n          <div className={togActive ? \"container a-container\" : \"container a-container is-txl\"} id=\"a-container\">\n            <form className=\"form\" id=\"a-form\" method=\"\" action=\"\">\n              <h2 className=\"form_title title\">Create Account</h2>\n              {/* <span className=\"form__span\">or use email for registration</span> */}\n              <input\n                className=\"form__input\"\n                type=\"text\"\n                placeholder=\"Name\"\n                onChange={(e) => {\n                  setNameReg(e.target.value);\n                }}\n              />\n              <input\n                className=\"form__input\"\n                type=\"number\"\n                placeholder=\"Roll Number\"\n                onChange={(e) => {\n                  setRollNumReg(e.target.value);\n                }}\n              />\n              <input\n                className=\"form__input\"\n                type={passwordtype}\n                placeholder=\"Password\"\n                onChange={(e) => {\n                  setPasswordReg(e.target.value);\n                }} />\n              <button className=\"form__button button\" onClick={register}>SIGN UP</button>\n            </form>\n          </div>\n          <div className={togActive ? \"container b-container\" : \"container b-container is-txl is-z200\"} id=\"b-container\">\n            <form className='form' id='b-form' method='' action=''>\n              <h2 className='form_title title'>Sign In to Website</h2>\n              <div className='st_inst_toggle'>\n                <button className={distog ? 'select_btn button2 dis' : 'select_btn button2'} onClick={e => distogglestud(e)}>Student</button>\n                <button className={distog ? 'select_btn button2' : 'select_btn button2 dis'} onClick={e => distoggleinst(e)}>Instructor</button>\n              </div>\n              <input\n                className='form__input'\n                type=\"text\"\n                placeholder={distog ? 'Instructor ID' : 'Roll Number'}\n                onChange={(e) => {\n                  setUserIDLog(e.target.value);\n                }}\n              />\n              <input\n                className='form__input'\n                type=\"password\"\n                placeholder='Password'\n                onChange={(e) => {\n                  setPasswordLog(e.target.value);\n                }}\n              />\n              <h3 className='form_title title'>{loginStatus}</h3>\n\n              <button className='form__button button' onClick={distog ? instlogin : studentlogin}>SIGN IN</button>\n            </form>\n          </div>\n          <div className={togActive ? \"switch\" : \"switch is-txr\"} id=\"switch-cnt\">\n            <div className={togActive ? \"switch__circle\" : \"switch__circle is-txr\"}></div>\n            <div className={togActive ? \"switch__circle switch__circle--t\" : \"switch__circle switch__circle--t is-txr\"}></div>\n\n\n\n\n            <div className={togActive ? \"switch__container\" : \"switch__container is-hidden\"} id=\"switch-c1\">\n            <img src=\"Logo.png\" alt=\"We Care Logo\" id=\"wecarelogo\"/>\n              {/* <h2 className=\"switch__title title\">Welcome Buddy!</h2> */}\n              <div id=\"emoo2\">\n              <p className=\"switch__description description\">Looking for the Login page?<br></br>Here you go!</p>\n              <button className=\"switch__button button switch-btn\" id='signin' onClick={e => handleToggle(e)}>SIGN IN</button>\n              </div>\n            </div>\n\n\n\n\n            <div className={togActive ? \"switch__container is-hidden\" : \"switch__container\"} id=\"switch-c2\">\n              <img src=\"Logo.png\" alt=\"We Care Logo\" id=\"wecarelogo\"/>\n              <div id=\"emoo\">\n                {/* <h2 className=\"switch__title title\">Hey There!</h2> */}\n                <p className=\"switch__description description\">Is this your first time here? <br></br>Sign up to start your journey with We Care!</p>\n                <button className=\"switch__button button switch-btn\" onClick={e => handleToggle(e)}>SIGN UP</button>\n              </div>\n            </div>\n\n\n\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Login;","/mnt/wsl/new/proact387/client/src/components/landingpage.js",["85","86","87"],[],"import React, {useEffect,useState,useRef} from \"react\";\nimport Axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\n\nfunction LandingPage(){\n    const navigate = useNavigate();\n    const [Status, setStatus] = useState(false);\n    const [roll_num,setRoll_num]=useState(\"\");\n    const [name,setName]=useState(\"\");\n    var resu = useRef([]);\n\n    const navlogin=()=>{\n        navigate('/');\n    };\n    const addval=async ()=>{\n        var wait = await Axios.post(\"http://localhost:8000/insert\",{\n      rollnumber: \"200050033\",\n      name: \"divyeswar\",\n      dept_name: \"cs\",\n      eng_level:\"3\",\n      hostel:\"9\",\n      room:\"250\"\n    }).then((response)=>{\n      console.log(response);\n      navigate('/dashboard');\n\n    })\n    }\n    const logout = () => {\n        // setLoginStatus(false);\n        Axios.get(\"http://localhost:8000/logout\").then((response) => {\n          console.log(response);\n        });\n        navigate(\"/\");\n      };\n    useEffect(()=>{\n        Axios.get(\"http://localhost:8000/login\").then((response) => {\n            if (response.data.loggedIn === true) {\n            //   setLoginStatus(response.data.user.rows[0].userID);\n              setStatus(true);\n              console.log(Status);\n              resu.current=response.data.user\n            }\n          });\n        }, [Status]);\n    return(\n        Status?(\n        <div className=\"landingpage\">\n            <h1>\n                Signup Successful\n            </h1>\n            <h1>\n                Please login to continue\n            </h1>\n            <input type=\"text\" placeholder=\"Roll Number\"\n          onChange={(e)=>{\n            setRoll_num(e.target.value);\n          }}/>\n          <input type=\"\" placeholder=\"Password\"\n          onChange={(e)=>{\n            setName(e.target.value);\n          }}/>\n            <button onClick={addval}>val</button>\n            <button onClick={navlogin}>Login</button>\n            <button onClick={logout}>Logout</button>\n        </div>)\n        :\n        (<div className=\"openpage\">\n        <h1>User Not Logged In</h1>\n        <h1>Please Login</h1>\n        <button className=\"button-17\" onClick={navlogin}>LOGIN</button>\n    </div>)\n    )\n}\n\nexport default LandingPage;","/mnt/wsl/new/proact387/client/src/components/dashboard.js",["88","89"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Dashboard() {\n  const navigate = useNavigate();\n  const [Status, setStatus] = useState(false);\n  const navlogin = () => {\n    navigate(\"/\");\n  };\n  var variable;\n  var variab;\n\n  const userdata = useRef(null);\n  const coursedata = useRef(null);\n  const deaddata = useRef(null);\n\n  const insights = async(e)=>{\n    e.preventDefault();\n    navigate(\"/insights\");\n  }\n\n  const sendemail = async(e) => {\n    console.log(\"Send Email\");\n    e.preventDefault();\n    const response = await Axios.get(\"http://localhost:8000/sendemail\");\n    console.log(\"Came here\");\n    if(response.data.success){\n      alert(\"Check your email box\");\n    } else{\n      alert(\"Error\");\n    }\n  }\n\n  var [datafetched, setDataFetched] = useState(false);\n  async function userdetailsfetching() {\n    const response = await Axios.get(\"http://localhost:8000/dashdisplay\");\n    if (response.data.err) {\n      console.log(\"Query error!\");\n    } else {\n      if (response.data.message) {\n        console.log(\"Session error\");\n      } else {\n        console.log(response);\n        var userdataset = await userdatasetting(response);\n        // setUserData(response.data.rows[0]);\n        console.log(\"User data set\");\n        console.log(userdata);\n      }\n    }\n  }\n  async function userdatasetting(response) {\n    console.log(\"reached user setting\");\n    //   setUserData(response.data.rows[0]);\n\n    userdata.current = response.data.stud.rows[0];\n    coursedata.current = response.data.course.rows;\n    deaddata.current=response.data.deadline.rows;\n    setDataFetched(true);\n    return \"Done\";\n  }\n  const logout = () => {\n    // setLoginStatus(false);\n    Axios.get(\"http://localhost:8000/logout\").then((response) => {\n      console.log(response);\n    });\n    navigate(\"/\");\n  };\n  useEffect(() => {\n    Axios.get(\"http://localhost:8000/login\").then((response) => {\n      if (response.data.loggedIn === true) {\n        //   setLoginStatus(response.data.user.rows[0].userID);\n        setStatus(true);\n        console.log(Status);\n      }\n    });\n    userdetailsfetching();\n  }, [Status, datafetched]);\n  return Status && datafetched ? (\n    <div className=\"dashboard-body\">\n      <div className=\"personal-info\">\n        <h2>Personal Information</h2>\n        <div className=\"info-item\">\n          <span>Name:</span>\n          <span>{userdata.current.name}</span>\n        </div>\n        <div className=\"info-item\">\n          <span>ID:</span>\n          <span>{userdata.current.roll_num}</span>\n        </div>\n        <div className=\"info-item\">\n          <span>Department:</span>\n          <span>{userdata.current.dept_name}</span>\n        </div>\n        <div className=\"info-item\">\n          <span>Hostel:</span>\n          <span>{userdata.current.hostel}</span>\n        </div>\n        <div className=\"info-item\">\n          <span>Room No:</span>\n          <span>{userdata.current.room}</span>\n        </div>\n        <div className=\"info-item\">\n          <span>Engagement level:</span>\n          <span>{userdata.current.eng_level}</span>\n        </div>\n        <button className=\"button2\" onClick={e => sendemail(e)} >Send Email</button>\n      </div>\n      <div className=\"today-classes\">\n        <div>\n          <h2>Today's Classes</h2>\n        </div>\n        <div className=\"class-grid\">\n          {coursedata.current.rowCount !== 0 ? (\n            coursedata.current.map((val, key) => {\n              return (\n                <div key={key}>\n                  <div className=\"class\">\n                    <div className=\"class-details\">\n                      <h3>\n                        {val.title}, {val.course_id}\n                      </h3>\n                      <p>\n                        {val.start_hr}:{val.start_min} {val.start} -{\" \"}\n                        {val.end_hr}:{val.end_min} {val.end}\n                      </p>\n                    </div>\n                    {/* <div className=\"class-status\">\n                                                    <span>Active</span>\n                                                </div> */}\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <div>\n              <h3>No classes Today!</h3>\n            </div>\n          )}\n        </div>\n        {/* <div className=\"class\">\n                                <div className=\"class-details\">\n                                    <h3>Introduction to Computer Science</h3>\n                                    <p>9:00 AM - 10:00 AM</p>\n                                </div>\n                                <div className=\"class-status\">\n                                    <span>Active</span>\n                                </div>\n                            </div>\n                            <div className=\"class\">\n                                <div className=\"class-details\">\n                                    <h3>Data Structures and Algorithms</h3>\n                                    <p>11:00 AM - 12:00 PM</p>\n                                </div>\n                                <div className=\"class-status\">\n                                    <span>Active</span>\n                                </div>\n                            </div> */}\n      </div>\n      <div className=\"today-classes\">\n        <div>\n          <h2>Upcoming Deadlines</h2>\n        </div>\n        <div className=\"class-grid\">\n          {deaddata.current.rowCount !== 0 ? (\n            deaddata.current.map((val, key) => {\n              variable=Date.parse(val.end_time);\n              variab=new Date(variable);\n              return (\n                <div key={key}>\n                  <div className=\"class\">\n                    <div className=\"class-details\">\n                      <h2>{val.name}</h2>\n                      <h3>\n                        {val.title}, {val.course_id}\n                      </h3>\n                      <p>\n                        submission by <b>{variab.toDateString()}</b>\n                      </p>\n                    </div>\n                    {/* <div className=\"class-status\">\n                                                    <span>Active</span>\n                                                </div> */}\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <div>\n              <h3>No Deadlines</h3>\n            </div>\n          )}\n        </div>\n        {/* <div className=\"class\">\n                                <div className=\"class-details\">\n                                    <h3>Introduction to Computer Science</h3>\n                                    <p>9:00 AM - 10:00 AM</p>\n                                </div>\n                                <div className=\"class-status\">\n                                    <span>Active</span>\n                                </div>\n                            </div>\n                            <div className=\"class\">\n                                <div className=\"class-details\">\n                                    <h3>Data Structures and Algorithms</h3>\n                                    <p>11:00 AM - 12:00 PM</p>\n                                </div>\n                                <div className=\"class-status\">\n                                    <span>Active</span>\n                                </div>\n                            </div> */}\n      </div>\n      <button onClick={insights}>Insights</button>\n      <button onClick={logout}>Logout</button>\n    </div>\n  ) : (\n    <div className=\"openpage\">\n      <h1>User Not Logged In</h1>\n      <h1>Please Login</h1>\n      <button className=\"button-17\" onClick={navlogin}>\n        LOGIN\n      </button>\n    </div>\n  );\n}\n\nexport default Dashboard;","/mnt/wsl/new/proact387/client/src/components/parentdetails.js",[],[],"/mnt/wsl/new/proact387/client/src/components/infogather.js",[],[],"/mnt/wsl/new/proact387/client/src/components/instructor1.js",["90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport ReactModal from 'react-modal';\nimport Side_bar from \"./side_bar\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../style/instructor.css\";\nimport NavBar from \"./navbar\";\n// import { extend } from '@syncfusion/ej2-base';\n// import { ScheduleComponent, ViewDirective,Day, Week,WorkWeek,Month,Agenda,Inject, Resize, ExcelExport, DragAndDrop, ViewsDirective } from '@syncfusion/ej2-react-schedule';\nimport { Link } from \"react-router-dom\";\n// import Courses from \"courses\"; \nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport moment from 'moment'\nimport { datetime, RRule, RRuleSet, rrulestr } from 'rrule'\n\nconst localizer = momentLocalizer(moment);\n\nconst recurrenceRule = rrulestr('FREQ=WEEKLY;BYDAY=TU,TH;COUNT=10');\n\nconst events = recurrenceRule.all().map(date => ({\n  title: 'Weekly Meeting',\n  start: moment(date).toDate(),\n  end: moment(date).add(1, 'hour').toDate(),\n}));\nconsole.log(\"----events----\");\nconsole.log(events);\n\nexport default function Instructor() {\n\n    Axios.defaults.withCredentials = true;\n\n    const navigate = useNavigate();\n\n    var [fetched, setFetched] = useState(false);\n    var [edited, setEdited] = useState(false);\n    var [coursespresent, setCoursesPresent] = useState(false);\n    var [classestoday, setClassesToday] = useState(false);\n    var instname = useRef(\"Name\");\n    var instid = useRef(\"212\");\n    var instdept = useRef(\"Comp. Sci.\");\n    var coursedata = useRef(null);\n    var [editname, setEditName] = useState(instname.current);\n    var [editdept, setEditDept] = useState(instdept.current);\n    var today = useRef(null);\n    var [editpopup, setEditPopup] = useState(false);\n  \n    var infofetch = async () => {\n        var result = await Axios.get(\"/instructorinfo\").then((response) => {\n            return response;\n        });\n        console.log(\"--------result---------\");\n        console.log(result);\n        if (result.data.message) {\n            alert(\"There seems to be a problem with our server. Please hang on while we try to fix it!\");\n            return 0;\n        } else if (result.data.insterror) {\n            alert(\"Your data is not found in our database\");\n            return 0;\n        } else if (result.data.nocourses) {\n            instname.current = result.data.instname;\n            instid.current = result.data.instid;\n            instdept.current = result.data.instdept;\n            setEditDept(instdept.current);\n            setEditName(instname.current);\n            setFetched(true);\n            return 1;\n        } else if (result.data.noclassestoday) {\n            instname.current = result.data.instname;\n            instid.current = result.data.instid;\n            instdept.current = result.data.instdept;\n            coursedata.current = result.data.instinfo.rows;\n            setEditDept(instdept.current);\n            setEditName(instname.current);\n            setCoursesPresent(true);\n            setFetched(true);\n            return 1;\n        } else {\n            instname.current = result.data.instname;\n            instid.current = result.data.instid;\n            instdept.current = result.data.instdept;\n            coursedata.current = result.data.instinfo.rows;\n            today.current = result.data.today.rows;\n            setEditDept(instdept.current);\n            setEditName(instname.current);\n            setCoursesPresent(true);\n            setFetched(true);\n            setClassesToday(true);\n            return 1;\n        }\n    }\n  \n    useEffect(() => {\n        infofetch();\n    }, [fetched, coursespresent, classestoday, edited]);\n  \n  \n  \n    console.log(\"-----------------hi-------------\")\n    console.log(coursedata);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n  \n  // add a state variable to hold the course that was clicked\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  \n   \n\n   \n\n  \n\n    return (\n        \n        <div>\n        <NavBar/>\n       \n               <div style={{display:'flex'}}>\n               <Side_bar/>\n               <div style={{ height: \"100vh\" ,width:\"100%\"}}>           \n               <Calendar\n    events={events}\n    startAccessor=\"start\"\n    endAccessor=\"end\"\n    // defaultDate={moment().toDate()}\n    style={{ height: \"100%\" ,width:\"100%\"}}\n    localizer={localizer}\n    />      \n    </div>      \n          \n                   \n                   </div>\n            </div>   \n       \n                     \n                                 \n                                        \n           \n                           \n            \n    )\n};\n\n\n\n\n\n\n\n\n\n","/mnt/wsl/new/proact387/client/src/components/course.js",["107","108","109","110","111","112","113"],[],"import React, {useRef, useState} from 'react';\nimport Axios from 'axios';\nimport \"../style/instructor.css\";\nimport { useParams } from 'react-router-dom';\n\n// course details, instructors, number of students taking the course, deadlines\n\nexport default function Course() {\n\n    Axios.defaults.withCredentials = true;\n\n    let { course_id } = useParams();\n    var coursename = useRef(\"Name\");\n    var coursedept = useRef(\"Department\");\n    var [editname, setEditName] = useState(coursename.current);\n    var [editdept, setEditDept] = useState(coursedept.current);\n    var [editpopup, setEditPopup] = useState(false);\n\n    const togglepopup = async(e) => {\n        e.preventDefault();\n        setEditPopup(true);\n    }\n\n    const editcourseinfo = async(e)=>{\n        e.preventDefault();\n        if(editname===\"\" || editdept===\"\"){\n            alert(\"None of the fields should be left empty\");\n            return 0;\n        } else {\n            var wait = Axios.post(\"/editcourseinfo\",{\n                editname: editname,\n                editdept: editdept\n            }).then((response)=>{\n                console.log(response);\n                if(response.data.message){\n                    alert(\"There seems to be a problem with our server. Please hang on while we fix it!\");\n                } else{\n                    window.location.reload();\n                }\n            })\n        }\n    }\n    \n    var infofetch = async () =>{\n        var result = await Axios.post(\"/courseinfo\",{course_id:course_id}).then((response)=>{\n            return response;\n        });\n        if(result.data.message){\n            alert(\"There seems to be a problem with our server. Please hang on while we fix it!\");\n            return 0;\n        } else if(result.data.courseerror){\n            alert(\"Data corresponding to this course is not found!\");\n            return 0;\n        } else if(result.data.noinstructor){\n            \n        }\n    }\n\n    return (\n        <div>Hello</div>\n    //     <div className=\"dashboard-body\">\n    //         <div className=\"dashboard-main\">\n    //             <div className=\"personal-info\">\n    //                 <h2>Course Information</h2>\n    //                 <div className=\"info-item\">\n    //                     <span>Name:</span>\n    //                     <span>{coursename.current}</span>\n    //                 </div>\n    //                 <div className=\"info-item\">\n    //                     <span>ID:</span>\n    //                     <span>{course_id}</span>\n    //                 </div>\n    //                 <div className=\"info-item\">\n    //                     <span>Department:</span>\n    //                     <span>{coursedept.current}</span>\n    //                 </div>\n    //                 <button className=\"button2\" onClick={togglepopup}>EDIT</button>\n    //                 <ReactModal\n    //                     isOpen={editpopup}\n    //                     ariaHideApp={false}\n    //                     contentLabel=\"Example Modal\"\n    //                 >\n    //                     <form className=\"form\">\n    //                         <input\n    //                             className=\"form__input\"\n    //                             type=\"text\"\n    //                             placeholder=\"Name\"\n    //                             value={editname}\n    //                             onChange={(e) => {\n    //                                 setEditName(e.target.value);\n    //                             }}\n    //                         />\n    //                         <input\n    //                             className=\"form__input\"\n    //                             type=\"text\"\n    //                             placeholder=\"Department Name\"\n    //                             value={editdept}\n    //                             onChange={(e) => {\n    //                                 setEditDept(e.target.value);\n    //                             }}\n    //                         />\n    //                         <button className=\"button2\" onClick={e => editcourseinfo(e)}>SUBMIT</button>\n    //                         <button className=\"button2\" onClick={togglepopup}>CLOSE</button>\n    //                     </form>\n    //                 </ReactModal>\n    //             </div>\n    //             <div className=\"courses\">\n    //                 <div>\n    //                     <h2>Courses</h2>\n    //                 </div>\n    //                 <div className=\"courses-grid\">\n    //                     {coursedata.current.map((val, key) => {\n    //                         return (\n    //                             <div key={key}>\n    //                                 <div className=\"course\" onClick={async () => {\n    //                                     gotocourse(val.course_id);\n    //                                 }}>\n    //                                     <div className=\"course-details\">\n    //                                         <h3>{val.title}, {val.dept_name}</h3>\n    //                                     </div>\n    //                                 </div>\n    //                             </div>\n    //                         );\n    //                     })}\n    //                 </div>\n    //             </div>\n    //             <div className=\"today-classes\">\n    //                 <div>\n    //                     <h2>Today's Classes</h2>\n    //                 </div>\n    //                 <div className=\"class-grid\">\n    //                     {today.current.map((val, key) => {\n    //                         return (\n    //                             <div key={key}>\n    //                                 <div className=\"class\">\n    //                                     <div className=\"class-details\">\n    //                                         <h3>{val.title}, {val.course_id}</h3>\n    //                                         <p>{val.start_hr}:{val.start_min} {val.start} - {val.end_hr}:{val.end_min} {val.end}</p>\n    //                                     </div>\n    //                                     {/* <div className=\"class-status\">\n    //                                 <span>Active</span>\n    //                             </div> */}\n    //                                 </div>\n    //                             </div>\n    //                         );\n    //                     })}\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     </div>\n\n    )\n\n};","/mnt/wsl/new/proact387/client/src/components/insights.js",["114"],[],"import React, { useEffect, useRef, useState } from 'react';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Insights() {\n\n    Axios.defaults.withCredentials = true;\n    let navigate = useNavigate();\n    var friends = useRef(null);\n    const [fetched, setFetched] = useState(false);\n\n    var friendsfetch = async () => {\n        var wait = await Axios.get(\"/friendsfetch\").then((response) => { return response });\n        if (wait.data.message) {\n            alert(\"There seems to be a problem with our server! Please hang on while we fix this!\");\n            return 0;\n        } else {\n            friends.current = wait.data.friends;\n            setFetched(true);\n        }\n    }\n\n    useEffect(() => {\n        friendsfetch()\n    }, [fetched]);\n\n    return (\n        fetched ?\n            <div className='dashboard-body'>\n                <div className='dashboard-main'>\n                    <div className=\"today-classes\">\n                        <div>\n                            <h2>Friends you can give insights on!</h2>\n                        </div>\n                        <div className='class-grid'>\n                            {friends.current.rowCount !== 0 ? (\n                                friends.current.rows.map((val, key) => {\n                                    return (\n                                        <div key={key}>\n                                            <h2>{val.id1}</h2>\n                                        </div>\n                                    )\n                                })\n                            ) : (\n                                <div>\n                                    <h3>Haha funny!</h3></div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            :\n            <div>Hello</div>\n    )\n};","/mnt/wsl/new/proact387/client/src/components/navbar.js",["115","116","117","118","119"],[],"/mnt/wsl/new/proact387/client/src/components/side_bar.js",["120","121","122","123","124","125","126","127"],[],"import { Link ,useMatch,useResolvedPath} from 'react-router-dom';\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactModal from 'react-modal';\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nexport default function Side_bar(){\n  Axios.defaults.withCredentials = true;\n\n  const navigate = useNavigate();\n\n  var [fetched, setFetched] = useState(false);\n  var [edited, setEdited] = useState(false);\n  var [coursespresent, setCoursesPresent] = useState(false);\n  var [classestoday, setClassesToday] = useState(false);\n  var instname = useRef(\"Name\");\n  var instid = useRef(\"212\");\n  var instdept = useRef(\"Comp. Sci.\");\n  var coursedata = useRef(null);\n  var [editname, setEditName] = useState(instname.current);\n  var [editdept, setEditDept] = useState(instdept.current);\n  var [editassgn,setEditAssgn] = useState(false);\n  var [deptcourse,setDeptcourse]=useState(false);\n  var [deadline,setDeadline]=useState(false);\n  var today = useRef(null);\n  var [editpopup, setEditPopup] = useState(false);\n  var [editassgnpopup, setEditassgnpopup] = useState(false);\n  var [editattenpopup,setEditattenpopup] = useState(false);\n  var infofetch = async () => {\n      var result = await Axios.get(\"/instructorinfo\").then((response) => {\n          return response;\n      });\n      console.log(\"--------result---------\");\n      console.log(result);\n      if (result.data.message) {\n          alert(\"There seems to be a problem with our server. Please hang on while we try to fix it!\");\n          return 0;\n      } else if (result.data.insterror) {\n          alert(\"Your data is not found in our database\");\n          return 0;\n      } else if (result.data.nocourses) {\n          instname.current = result.data.instname;\n          instid.current = result.data.instid;\n          instdept.current = result.data.instdept;\n          setEditDept(instdept.current);\n          setEditName(instname.current);\n          setFetched(true);\n          return 1;\n      } else if (result.data.noclassestoday) {\n          instname.current = result.data.instname;\n          instid.current = result.data.instid;\n          instdept.current = result.data.instdept;\n          coursedata.current = result.data.instinfo.rows;\n          setEditDept(instdept.current);\n          setEditName(instname.current);\n          setCoursesPresent(true);\n          setFetched(true);\n          return 1;\n      } else {\n          instname.current = result.data.instname;\n          instid.current = result.data.instid;\n          instdept.current = result.data.instdept;\n          coursedata.current = result.data.instinfo.rows;\n          today.current = result.data.today.rows;\n          setEditDept(instdept.current);\n          setEditName(instname.current);\n          setCoursesPresent(true);\n          setFetched(true);\n          setClassesToday(true);\n          return 1;\n      }\n  }\n\n  useEffect(() => {\n      infofetch();\n  }, [fetched, coursespresent, classestoday, edited]);\n\n  const togglepopup = async(e)=>{\n      e.preventDefault();\n      setEditPopup(!editpopup);\n  }\n  const toggleassgnpopup = async(e)=>{\n    e.preventDefault();\n    setEditassgnpopup(!editassgnpopup);\n  }\n  const toggleattenpopup = async(e)=>{\n  e.preventDefault();\n  setEditattenpopup(!editattenpopup);\n}\n\n  var editpersonalinfo = async(e)=>{\n      e.preventDefault();\n      if(editname===\"\" || editdept === \"\"){\n          alert(\"None of the fields should be left empty!\");\n          return 0;\n      } else {\n          var wait = Axios.post(\"/editinstinfo\",{\n              editname: editname,\n              editdept: editdept\n          }).then((response)=>{\n              console.log(response);\n              if(response.data.message){\n                  alert(\"There seems to be a problem with our server. Please hang on while we fix it!\");\n              } else{\n                  console.log(\"Ippudocchindhii\");\n                  window.location.reload();\n              }\n              return response;\n          });\n      }\n  }\n  const handleChange = () =>async(e) => {\n    // let updatedValue = {};\n    // updatedValue = {\"item1\":\"juice\"};\n    setDeptcourse(e.target.value);\n  };\n  console.log(\"-----------------hi-------------\")\n  console.log(coursedata);\n const assignment_add=()=>(e)=>{\n\n }\n\n\n    return(\n        <div className=\"side-board\">\n             <div className=\"entire\">\n        <div className=\"form_ok\">\n          <h2>Personal Information</h2>\n          <div className=\"info-item\">\n            <span>Name:</span>\n            <span>{instname.current}</span>\n          </div>\n          <div className=\"info-item\">\n            <span>ID:</span>\n            <span>{instid.current}</span>\n          </div>\n          <div className=\"info-item\">\n            <span>Department:</span>\n            <span>{instdept.current}</span>\n          </div>\n          <button className=\"button3\" onClick={togglepopup}>EDIT</button>\n                                <ReactModal\n                                    isOpen = {editpopup}\n                                    ariaHideApp={false}\n                                    contentLabel = \"Example Modal\"\n                                >\n                                    <form className=\"form\">\n                                        <input\n                                            className=\"form__input\"\n                                            type=\"text\"\n                                            placeholder=\"Name\"\n                                            value={editname}\n                                            onChange={(e)=>{\n                                                setEditName(e.target.value);\n                                            }}\n                                        />\n                                        <input\n                                            className=\"form__input\"\n                                            type=\"text\"\n                                            placeholder=\"Department Name\"\n                                            value={editdept}\n                                            onChange={(e)=>{\n                                                setEditDept(e.target.value);\n                                            }}\n                                        />\n                                        <button className=\"button2\" onClick={e => editpersonalinfo(e)}>SUBMIT</button>\n                                        <button className=\"button2\" onClick={togglepopup}>CLOSE</button>\n                                    </form>\n                                </ReactModal>\n                                \n        </div>\n            <div className='add_assgn'>\n            <h2>add Assignment</h2>\n            <button className=\"button3\" onClick={toggleassgnpopup}>ADD</button>\n            <ReactModal\n                                    isOpen = {editassgnpopup}\n                                    ariaHideApp={false}\n                                    contentLabel = \"Example Modal\"\n                                >\n                                    <form className=\"form\">\n                                        \n                                       \n                                        {coursedata.current && \n                                            <select value = {deptcourse} onChange={handleChange() }className=\"form__input\">\n                                                <option value=\"\">Select an option</option> \n                                            {coursedata.current.map((item,index)=>(\n                                                <option value={item.title}>{item.title}</option>\n                                            ))}\n                                            </select>\n                                        }\n            <input\n                                            className=\"form__input\"\n                                            type=\"text\"\n                                            placeholder=\"Title\"\n                                            \n                                            onChange={(e)=>{\n                                                setEditAssgn(e.target.value);\n                                            }}\n                                        />\n                    <input  className=\"form__input\" type=\"datetime-local\" placeholder='Deadline' onChange={(e)=>{\n                            setDeadline(e.target.value);\n                    }} />\n                                        <button className=\"button2\" onClick={e => assignment_add(e)}>SUBMIT</button>\n                                        <button className=\"button2\" onClick={toggleassgnpopup}>CLOSE</button>\n                                    </form>\n                                </ReactModal>\n            </div>\n            <div className='add_assgn'>\n            <h2>Upload Attendance</h2>\n            <button className=\"button3\" onClick={toggleattenpopup}>ADD</button>\n            <ReactModal\n                                    isOpen = {editattenpopup}\n                                    ariaHideApp={false}\n                                    contentLabel = \"Example Modal\"\n                                    classNames={{\n                                        overlay: \"customOverlay\",\n                                        modal: \"customModal\",\n                                      }}>\n                                    <form className=\"form\">\n                                         \n                                    {coursedata.current && \n                                            <select value = {deptcourse} onChange={handleChange() }className=\"form__input\">\n                                                <option value=\"\">Select an option</option> \n                                            {coursedata.current.map((item,index)=>(\n                                                <option value={item.title}>{item.title}</option>\n                                            ))}\n                                            </select>\n                                        }\n                                       \n                                        \n            <input\n                                          \n                                            type=\"file\"\n                                            accept=\".csv\"\n                                            \n                                            onChange={(e)=>{\n                                                setEditAssgn(e.target.value);\n                                            }}\n                                        />\n                                         \n                   \n                                        <button className=\"button2\" onClick={e => assignment_add(e)}>SUBMIT</button>\n                                        <button className=\"button2\" onClick={toggleattenpopup}>CLOSE</button>\n                                    </form>\n                                </ReactModal>\n            </div>\n        </div>\n      </div>\n    );\n}","/mnt/wsl/new/proact387/client/src/components/courses.js",["128","129","130","131","132","133","134","135","136","137"],[],{"ruleId":"138","severity":1,"message":"139","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":14},{"ruleId":"138","severity":1,"message":"142","line":22,"column":9,"nodeType":"140","messageId":"141","endLine":22,"endColumn":23},{"ruleId":"138","severity":1,"message":"143","line":35,"column":9,"nodeType":"140","messageId":"141","endLine":35,"endColumn":13},{"ruleId":"138","severity":1,"message":"143","line":58,"column":9,"nodeType":"140","messageId":"141","endLine":58,"endColumn":13},{"ruleId":"138","severity":1,"message":"143","line":78,"column":9,"nodeType":"140","messageId":"141","endLine":78,"endColumn":13},{"ruleId":"138","severity":1,"message":"144","line":8,"column":12,"nodeType":"140","messageId":"141","endLine":8,"endColumn":20},{"ruleId":"138","severity":1,"message":"145","line":9,"column":12,"nodeType":"140","messageId":"141","endLine":9,"endColumn":16},{"ruleId":"138","severity":1,"message":"143","line":16,"column":13,"nodeType":"140","messageId":"141","endLine":16,"endColumn":17},{"ruleId":"138","severity":1,"message":"146","line":45,"column":13,"nodeType":"140","messageId":"141","endLine":45,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":78,"column":6,"nodeType":"149","endLine":78,"endColumn":27,"suggestions":"150"},{"ruleId":"138","severity":1,"message":"151","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":18},{"ruleId":"138","severity":1,"message":"152","line":10,"column":10,"nodeType":"140","messageId":"141","endLine":10,"endColumn":14},{"ruleId":"138","severity":1,"message":"153","line":12,"column":37,"nodeType":"140","messageId":"141","endLine":12,"endColumn":42},{"ruleId":"138","severity":1,"message":"154","line":15,"column":10,"nodeType":"140","messageId":"141","endLine":15,"endColumn":18},{"ruleId":"138","severity":1,"message":"155","line":15,"column":20,"nodeType":"140","messageId":"141","endLine":15,"endColumn":25},{"ruleId":"138","severity":1,"message":"156","line":15,"column":27,"nodeType":"140","messageId":"141","endLine":15,"endColumn":35},{"ruleId":"138","severity":1,"message":"157","line":33,"column":11,"nodeType":"140","messageId":"141","endLine":33,"endColumn":19},{"ruleId":"138","severity":1,"message":"158","line":36,"column":18,"nodeType":"140","messageId":"141","endLine":36,"endColumn":27},{"ruleId":"138","severity":1,"message":"159","line":43,"column":10,"nodeType":"140","messageId":"141","endLine":43,"endColumn":18},{"ruleId":"138","severity":1,"message":"160","line":44,"column":10,"nodeType":"140","messageId":"141","endLine":44,"endColumn":18},{"ruleId":"138","severity":1,"message":"161","line":46,"column":10,"nodeType":"140","messageId":"141","endLine":46,"endColumn":19},{"ruleId":"138","severity":1,"message":"162","line":46,"column":21,"nodeType":"140","messageId":"141","endLine":46,"endColumn":33},{"ruleId":"138","severity":1,"message":"163","line":101,"column":12,"nodeType":"140","messageId":"141","endLine":101,"endColumn":23},{"ruleId":"138","severity":1,"message":"164","line":101,"column":25,"nodeType":"140","messageId":"141","endLine":101,"endColumn":39},{"ruleId":"138","severity":1,"message":"165","line":104,"column":10,"nodeType":"140","messageId":"141","endLine":104,"endColumn":24},{"ruleId":"138","severity":1,"message":"166","line":104,"column":26,"nodeType":"140","messageId":"141","endLine":104,"endColumn":43},{"ruleId":"167","severity":1,"message":"168","line":118,"column":16,"nodeType":"169","messageId":"170","endLine":118,"endColumn":27},{"ruleId":"138","severity":1,"message":"171","line":15,"column":20,"nodeType":"140","messageId":"141","endLine":15,"endColumn":31},{"ruleId":"138","severity":1,"message":"172","line":16,"column":20,"nodeType":"140","messageId":"141","endLine":16,"endColumn":31},{"ruleId":"138","severity":1,"message":"161","line":17,"column":10,"nodeType":"140","messageId":"141","endLine":17,"endColumn":19},{"ruleId":"138","severity":1,"message":"173","line":19,"column":11,"nodeType":"140","messageId":"141","endLine":19,"endColumn":22},{"ruleId":"138","severity":1,"message":"174","line":24,"column":11,"nodeType":"140","messageId":"141","endLine":24,"endColumn":25},{"ruleId":"138","severity":1,"message":"143","line":30,"column":17,"nodeType":"140","messageId":"141","endLine":30,"endColumn":21},{"ruleId":"138","severity":1,"message":"175","line":44,"column":9,"nodeType":"140","messageId":"141","endLine":44,"endColumn":18},{"ruleId":"138","severity":1,"message":"157","line":8,"column":9,"nodeType":"140","messageId":"141","endLine":8,"endColumn":17},{"ruleId":"138","severity":1,"message":"151","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":18},{"ruleId":"138","severity":1,"message":"158","line":17,"column":18,"nodeType":"140","messageId":"141","endLine":17,"endColumn":27},{"ruleId":"138","severity":1,"message":"173","line":80,"column":11,"nodeType":"140","messageId":"141","endLine":80,"endColumn":22},{"ruleId":"138","severity":1,"message":"176","line":85,"column":9,"nodeType":"140","messageId":"141","endLine":85,"endColumn":25},{"ruleId":"138","severity":1,"message":"143","line":91,"column":17,"nodeType":"140","messageId":"141","endLine":91,"endColumn":21},{"ruleId":"138","severity":1,"message":"152","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":14},{"ruleId":"138","severity":1,"message":"177","line":1,"column":16,"nodeType":"140","messageId":"141","endLine":1,"endColumn":24},{"ruleId":"138","severity":1,"message":"178","line":1,"column":25,"nodeType":"140","messageId":"141","endLine":1,"endColumn":40},{"ruleId":"138","severity":1,"message":"157","line":9,"column":9,"nodeType":"140","messageId":"141","endLine":9,"endColumn":17},{"ruleId":"138","severity":1,"message":"158","line":12,"column":16,"nodeType":"140","messageId":"141","endLine":12,"endColumn":25},{"ruleId":"138","severity":1,"message":"179","line":21,"column":8,"nodeType":"140","messageId":"141","endLine":21,"endColumn":17},{"ruleId":"138","severity":1,"message":"180","line":23,"column":8,"nodeType":"140","messageId":"141","endLine":23,"endColumn":16},{"ruleId":"138","severity":1,"message":"143","line":96,"column":15,"nodeType":"140","messageId":"141","endLine":96,"endColumn":19},{"ruleId":"138","severity":1,"message":"157","line":13,"column":9,"nodeType":"140","messageId":"141","endLine":13,"endColumn":17},{"ruleId":"138","severity":1,"message":"158","line":16,"column":16,"nodeType":"140","messageId":"141","endLine":16,"endColumn":25},{"ruleId":"138","severity":1,"message":"159","line":23,"column":8,"nodeType":"140","messageId":"141","endLine":23,"endColumn":16},{"ruleId":"138","severity":1,"message":"160","line":24,"column":8,"nodeType":"140","messageId":"141","endLine":24,"endColumn":16},{"ruleId":"138","severity":1,"message":"161","line":26,"column":8,"nodeType":"140","messageId":"141","endLine":26,"endColumn":17},{"ruleId":"138","severity":1,"message":"162","line":26,"column":19,"nodeType":"140","messageId":"141","endLine":26,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":92,"column":17,"nodeType":"169","messageId":"170","endLine":92,"endColumn":28},{"ruleId":"181","severity":1,"message":"182","line":125,"column":57,"nodeType":"183","messageId":"184","endLine":125,"endColumn":59},{"ruleId":"185","severity":1,"message":"186","line":125,"column":86,"nodeType":"187","messageId":"188","endLine":125,"endColumn":88},{"ruleId":"181","severity":1,"message":"182","line":125,"column":91,"nodeType":"183","messageId":"184","endLine":125,"endColumn":93},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'passwordtoggle' is assigned a value but never used.","'wait' is assigned a value but never used.","'roll_num' is assigned a value but never used.","'name' is assigned a value but never used.","'userdataset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userdetailsfetching'. Either include it or remove the dependency array.","ArrayExpression",["189"],"'ReactModal' is defined but never used.","'Link' is defined but never used.","'Views' is defined but never used.","'datetime' is defined but never used.","'RRule' is defined but never used.","'RRuleSet' is defined but never used.","'navigate' is assigned a value but never used.","'setEdited' is assigned a value but never used.","'editname' is assigned a value but never used.","'editdept' is assigned a value but never used.","'editpopup' is assigned a value but never used.","'setEditPopup' is assigned a value but never used.","'isModalOpen' is assigned a value but never used.","'setIsModalOpen' is assigned a value but never used.","'selectedCourse' is assigned a value but never used.","'setSelectedCourse' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Side_bar must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'setEditName' is assigned a value but never used.","'setEditDept' is assigned a value but never used.","'togglepopup' is assigned a value but never used.","'editcourseinfo' is assigned a value but never used.","'infofetch' is assigned a value but never used.","'editpersonalinfo' is assigned a value but never used.","'useMatch' is defined but never used.","'useResolvedPath' is defined but never used.","'editassgn' is assigned a value but never used.","'deadline' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"190","fix":"191"},"Update the dependencies array to be: [Status, datafetched, userdetailsfetching]",{"range":"192","text":"193"},[2190,2211],"[Status, datafetched, userdetailsfetching]"]