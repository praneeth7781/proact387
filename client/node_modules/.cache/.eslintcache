[{"/home/praneeth/DBIS/project/client/src/App.js":"1","/home/praneeth/DBIS/project/client/src/components/login.js":"2","/home/praneeth/DBIS/project/client/src/components/landingpage.js":"3","/home/praneeth/DBIS/project/client/src/components/parentdetails.js":"4","/home/praneeth/DBIS/project/client/src/components/infogather.js":"5","/home/praneeth/DBIS/project/client/src/components/instructor1.js":"6","/home/praneeth/DBIS/project/client/src/components/insights.js":"7","/home/praneeth/DBIS/project/client/src/components/dashboard.js":"8","/home/praneeth/DBIS/project/client/src/components/course.js":"9","/home/praneeth/DBIS/project/client/src/components/ratingstyles.js":"10","/home/praneeth/DBIS/project/client/src/index.js":"11","/home/praneeth/DBIS/project/client/src/reportWebVitals.js":"12","/home/praneeth/DBIS/project/client/src/components/insightsform.js":"13"},{"size":2361,"mtime":1682629341729,"results":"14","hashOfConfig":"15"},{"size":7509,"mtime":1682368822875,"results":"16","hashOfConfig":"15"},{"size":2204,"mtime":1682368822863,"results":"17","hashOfConfig":"15"},{"size":7014,"mtime":1682368822875,"results":"18","hashOfConfig":"15"},{"size":12132,"mtime":1682368822831,"results":"19","hashOfConfig":"15"},{"size":15779,"mtime":1682368822851,"results":"20","hashOfConfig":"15"},{"size":10938,"mtime":1682629341729,"results":"21","hashOfConfig":"15"},{"size":7809,"mtime":1682368822819,"results":"22","hashOfConfig":"15"},{"size":6469,"mtime":1682368822819,"results":"23","hashOfConfig":"15"},{"size":306,"mtime":1682629341733,"results":"24","hashOfConfig":"15"},{"size":535,"mtime":1680333484065,"results":"25","hashOfConfig":"15"},{"size":362,"mtime":1680333484065,"results":"26","hashOfConfig":"15"},{"size":11204,"mtime":1682629341729,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ppgz4u",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/praneeth/DBIS/project/client/src/App.js",[],[],"/home/praneeth/DBIS/project/client/src/components/login.js",["73","74","75","76","77"],[],"import React, { useEffect, useState } from 'react';\nimport Axios from \"axios\";\nimport styles from \"../style/login.css\"\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction Login() {\n\n  Axios.defaults.withCredentials = true;\n  var navigate = useNavigate();\n  const [rollnumreg, setRollNumReg] = useState(\"\");\n  const [passwordreg, setPasswordReg] = useState(\"\");\n  const [namereg, setNameReg] = useState(\"\");\n  const [passwordtype, setPasswordType] = useState(\"password\");\n  // const [hostelnumreg, setHostelNumReg] = useState(\"\");\n  // const [roomnumreg, setRoomNumReg] = useState(\"\");\n\n  const [useridlog, setUserIDLog] = useState(\"\");\n  const [passwordlog, setPasswordLog] = useState(\"\");\n\n\n  const passwordtoggle = (e) => {\n    e.preventDefault();\n    if (passwordtype === \"password\") {\n      setPasswordType(\"text\");\n    } else {\n      setPasswordType(\"password\");\n    }\n  }\n\n  const studentlogin = async (e) => {\n    e.preventDefault();\n    console.log(e);\n    console.log(\"Entered client-side student login\");\n    var wait = await Axios.post(\"http://localhost:8000/studentlogin\", {\n      user_id: useridlog,\n      password: passwordlog,\n    }).then((response) => {\n      console.log(\"Response received: \" + response);\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n      } else {\n        console.log(response);\n        if (response.data.pres) {\n          setLoginStatus(response.data.resul.rows[0].user_id);\n          navigate('/dashboard');\n        }\n        else {\n          navigate('/infogather');\n        }\n      }\n    });\n  }\n\n  const instlogin = async (e) => {\n    e.preventDefault();\n    console.log(\"Entered client-side instructor login\");\n    var wait = await Axios.post(\"http://localhost:8000/instlogin\", {\n      user_id: useridlog,\n      password: passwordlog,\n    }).then((response) => {\n      console.log(\"Response received: \" + response);\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n      } else if (response.data.success) {\n        navigate('/instructor');\n      }\n    });\n  }\n\n\n  const [loginStatus, setLoginStatus] = useState(\"\");\n  const [registerStatus, setRegisterStatus] = useState(false);\n  const [Status, setStatus] = useState(false);\n\n  const register = async (e) => {\n    e.preventDefault();\n    var wait = await Axios.post(\"http://localhost:8000/register\", {\n      rollnumber: rollnumreg,\n      password: passwordreg,\n      name: namereg,\n    }).then((response) => {\n      setRegisterStatus(true);\n      console.log(response);\n      window.location.reload();\n\n    })\n  }\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:8000/login\").then((response) => {\n      if (response.data.loggedIn === true) {\n        setLoginStatus(response.data.user.rows[0].userID);\n        setStatus(true);\n        console.log(Status);\n      }\n    });\n  }, [Status, registerStatus]);\n\n  const [distog, setDisTog] = useState(false); //false is for student\n\n  const distogglestud = (e) => {\n    e.preventDefault();\n    setDisTog(false);\n  }\n\n  const distoggleinst = (e) => {\n    e.preventDefault();\n    setDisTog(true);\n  }\n\n  const handleToggle = (e) => {\n    e.preventDefault();\n    setTogActive(!togActive);\n  }\n  const [togActive, setTogActive] = useState(false);//false is for signIn\n  return (\n    Status ?\n      navigate(\"/redirect\") :\n      <div className='body'>\n\n        <div className=\"main\">\n          <div className={togActive ? \"container a-container\" : \"container a-container is-txl\"} id=\"a-container\">\n            <form className=\"form\" id=\"a-form\" method=\"\" action=\"\">\n              <h2 className=\"form_title title\">Create Account</h2>\n              {/* <span className=\"form__span\">or use email for registration</span> */}\n              <input\n                className=\"form__input\"\n                type=\"text\"\n                placeholder=\"Name\"\n                onChange={(e) => {\n                  setNameReg(e.target.value);\n                }}\n              />\n              <input\n                className=\"form__input\"\n                type=\"number\"\n                placeholder=\"Roll Number\"\n                onChange={(e) => {\n                  setRollNumReg(e.target.value);\n                }}\n              />\n              <input\n                className=\"form__input\"\n                type={passwordtype}\n                placeholder=\"Password\"\n                onChange={(e) => {\n                  setPasswordReg(e.target.value);\n                }} />\n              <button className=\"form__button button\" onClick={register}>SIGN UP</button>\n            </form>\n          </div>\n          <div className={togActive ? \"container b-container\" : \"container b-container is-txl is-z200\"} id=\"b-container\">\n            <form className='form' id='b-form' method='' action=''>\n              <h2 className='form_title title'>Sign In to Website</h2>\n              <div className='st_inst_toggle'>\n                <button className={distog ? 'select_btn button2 dis' : 'select_btn button2'} onClick={e => distogglestud(e)}>Student</button>\n                <button className={distog ? 'select_btn button2' : 'select_btn button2 dis'} onClick={e => distoggleinst(e)}>Instructor</button>\n              </div>\n              <input\n                className='form__input'\n                type=\"text\"\n                placeholder={distog ? 'Instructor ID' : 'Roll Number'}\n                onChange={(e) => {\n                  setUserIDLog(e.target.value);\n                }}\n              />\n              <input\n                className='form__input'\n                type=\"password\"\n                placeholder='Password'\n                onChange={(e) => {\n                  setPasswordLog(e.target.value);\n                }}\n              />\n              <h3 className='form_title title'>{loginStatus}</h3>\n\n              <button className='form__button button' onClick={distog ? instlogin : studentlogin}>SIGN IN</button>\n            </form>\n          </div>\n          <div className={togActive ? \"switch\" : \"switch is-txr\"} id=\"switch-cnt\">\n            <div className={togActive ? \"switch__circle\" : \"switch__circle is-txr\"}></div>\n            <div className={togActive ? \"switch__circle switch__circle--t\" : \"switch__circle switch__circle--t is-txr\"}></div>\n\n\n\n\n            <div className={togActive ? \"switch__container\" : \"switch__container is-hidden\"} id=\"switch-c1\">\n            <img src=\"Logo.png\" alt=\"We Care Logo\" id=\"wecarelogo\"/>\n              {/* <h2 className=\"switch__title title\">Welcome Buddy!</h2> */}\n              <div id=\"emoo2\">\n              <p className=\"switch__description description\">Looking for the Login page?<br></br>Here you go!</p>\n              <button className=\"switch__button button switch-btn\" id='signin' onClick={e => handleToggle(e)}>SIGN IN</button>\n              </div>\n            </div>\n\n\n\n\n            <div className={togActive ? \"switch__container is-hidden\" : \"switch__container\"} id=\"switch-c2\">\n              <img src=\"Logo.png\" alt=\"We Care Logo\" id=\"wecarelogo\"/>\n              <div id=\"emoo\">\n                {/* <h2 className=\"switch__title title\">Hey There!</h2> */}\n                <p className=\"switch__description description\">Is this your first time here? <br></br>Sign up to start your journey with We Care!</p>\n                <button className=\"switch__button button switch-btn\" onClick={e => handleToggle(e)}>SIGN UP</button>\n              </div>\n            </div>\n\n\n\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Login;",[],"/home/praneeth/DBIS/project/client/src/components/landingpage.js",["78","79","80"],[],"import React, {useEffect,useState,useRef} from \"react\";\nimport Axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\n\nfunction LandingPage(){\n    const navigate = useNavigate();\n    const [Status, setStatus] = useState(false);\n    const [roll_num,setRoll_num]=useState(\"\");\n    const [name,setName]=useState(\"\");\n    var resu = useRef([]);\n\n    const navlogin=()=>{\n        navigate('/');\n    };\n    const addval=async ()=>{\n        var wait = await Axios.post(\"http://localhost:8000/insert\",{\n      rollnumber: \"200050033\",\n      name: \"divyeswar\",\n      dept_name: \"cs\",\n      eng_level:\"3\",\n      hostel:\"9\",\n      room:\"250\"\n    }).then((response)=>{\n      console.log(response);\n      navigate('/dashboard');\n\n    })\n    }\n    const logout = () => {\n        // setLoginStatus(false);\n        Axios.get(\"http://localhost:8000/logout\").then((response) => {\n          console.log(response);\n        });\n        navigate(\"/\");\n      };\n    useEffect(()=>{\n        Axios.get(\"http://localhost:8000/login\").then((response) => {\n            if (response.data.loggedIn === true) {\n            //   setLoginStatus(response.data.user.rows[0].userID);\n              setStatus(true);\n              console.log(Status);\n              resu.current=response.data.user\n            }\n          });\n        }, [Status]);\n    return(\n        Status?(\n        <div className=\"landingpage\">\n            <h1>\n                Signup Successful\n            </h1>\n            <h1>\n                Please login to continue\n            </h1>\n            <input type=\"text\" placeholder=\"Roll Number\"\n          onChange={(e)=>{\n            setRoll_num(e.target.value);\n          }}/>\n          <input type=\"\" placeholder=\"Password\"\n          onChange={(e)=>{\n            setName(e.target.value);\n          }}/>\n            <button onClick={addval}>val</button>\n            <button onClick={navlogin}>Login</button>\n            <button onClick={logout}>Logout</button>\n        </div>)\n        :\n        (<div className=\"openpage\">\n        <h1>User Not Logged In</h1>\n        <h1>Please Login</h1>\n        <button className=\"button-17\" onClick={navlogin}>LOGIN</button>\n    </div>)\n    )\n}\n\nexport default LandingPage;","/home/praneeth/DBIS/project/client/src/components/parentdetails.js",[],[],"/home/praneeth/DBIS/project/client/src/components/infogather.js",[],[],"/home/praneeth/DBIS/project/client/src/components/instructor1.js",["81","82","83","84","85","86","87","88"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport ReactModal from 'react-modal';\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../style/instructor1.css\";\n\nexport default function Instructor() {\n\n    Axios.defaults.withCredentials = true;\n\n    const navigate = useNavigate();\n\n    var [fetched, setFetched] = useState(false);\n    var [edited, setEdited] = useState(false);\n    var [coursespresent, setCoursesPresent] = useState(false);\n    var [classestoday, setClassesToday] = useState(false);\n    var instname = useRef(\"Name\");\n    var instid = useRef(\"212\");\n    var instdept = useRef(\"Comp. Sci.\");\n    var coursedata = useRef(null);\n    var [editname, setEditName] = useState(instname.current);\n    var [editdept, setEditDept] = useState(instdept.current);\n    var today = useRef(null);\n    var [editpopup, setEditPopup] = useState(false);\n    // const [instname, setInstName] = useRef(\"Name\");\n    // const [instid, setInstID] = useRef(\"2000\");\n    // const [instdept, setInstDept] = useRef(\"Comp. Sci.\");\n    // const [courses, ]\n\n    var infofetch = async () => {\n        var result = await Axios.get(\"/instructorinfo\").then((response) => {\n            return response;\n        });\n        if (result.data.message) {\n            alert(\"There seems to be a problem with our server. Please hang on while we try to fix it!\");\n            return 0;\n        } else if (result.data.insterror) {\n            alert(\"Your data is not found in our database\");\n            return 0;\n        } else if (result.data.nocourses) {\n            instname.current = result.data.instname;\n            instid.current = result.data.instid;\n            instdept.current = result.data.instdept;\n            setEditDept(instdept.current);\n            setEditName(instname.current);\n            setFetched(true);\n            return 1;\n        } else if (result.data.noclassestoday) {\n            instname.current = result.data.instname;\n            instid.current = result.data.instid;\n            instdept.current = result.data.instdept;\n            coursedata.current = result.data.instinfo.rows;\n            setEditDept(instdept.current);\n            setEditName(instname.current);\n            setCoursesPresent(true);\n            setFetched(true);\n            return 1;\n        } else {\n            instname.current = result.data.instname;\n            instid.current = result.data.instid;\n            instdept.current = result.data.instdept;\n            coursedata.current = result.data.instinfo.rows;\n            today.current = result.data.today.rows;\n            setEditDept(instdept.current);\n            setEditName(instname.current);\n            setCoursesPresent(true);\n            setFetched(true);\n            setClassesToday(true);\n            return 1;\n        }\n    }\n\n    useEffect(() => {\n        infofetch();\n    }, [fetched, coursespresent, classestoday, edited]);\n\n    const togglepopup = async(e)=>{\n        e.preventDefault();\n        setEditPopup(!editpopup);\n    }\n\n    var editpersonalinfo = async(e)=>{\n        e.preventDefault();\n        if(editname===\"\" || editdept === \"\"){\n            alert(\"None of the fields should be left empty!\");\n            return 0;\n        } else {\n            var wait = Axios.post(\"/editinstinfo\",{\n                editname: editname,\n                editdept: editdept\n            }).then((response)=>{\n                console.log(response);\n                if(response.data.message){\n                    alert(\"There seems to be a problem with our server. Please hang on while we fix it!\");\n                } else{\n                    console.log(\"Ippudocchindhii\");\n                    window.location.reload();\n                    // setEdited(!edited);\n                    // setEditPopup(false);\n                }\n                return response;\n            });\n            // if((await wait).data.message){\n            //     alert(\"There seems to be a problem with our server. Please hang on while we fix it!\");\n            // } else{\n            //     console.log(\"Vacchindhi!\");\n            //     setEdited(!edited);\n            //     setEditPopup(false);\n            // }\n        }\n    }\n\n    const logout = () => {\n        // setLoginStatus(false);\n        Axios.get(\"http://localhost:8000/logout\").then((response) => {\n            console.log(response);\n        });\n        navigate(\"/\");\n    };\n\n    return (\n        fetched ?\n            coursespresent ?\n                classestoday ?\n                    <div className=\"dashboard-body\">\n                        <div className=\"dashboard-main\">\n                            <div className=\"personal-info\">\n                            <div className=\"image-container\">\n                                    <img src = \"no-dp.jpg\"></img>\n                                </div>\n                                 \n                                <div className=\"info-container\">\n                                <h2 >Personal Information</h2>                       \n                                <div className=\"info-item\">\n                                    <span>Name:</span>\n                                    <span>{instname.current}</span>\n                                </div>\n                                <div className=\"info-item\">\n                                    <span>ID:</span>\n                                    <span>{instid.current}</span>\n                                </div>\n                                <div className=\"info-item\">\n                                    <span>Department:</span>\n                                    <span>{instdept.current}</span>\n                                </div>\n                                <button className=\"button2\" onClick={togglepopup}>EDIT</button>\n                                <ReactModal\n                                    isOpen = {editpopup}\n                                    ariaHideApp={false}\n                                    contentLabel = \"Example Modal\"\n                                >\n                                    <form className=\"form\">\n                                        <input\n                                            className=\"form__input\"\n                                            type=\"text\"\n                                            placeholder=\"Name\"\n                                            value={editname}\n                                            onChange={(e)=>{\n                                                setEditName(e.target.value);\n                                            }}\n                                        />\n                                        <input\n                                            className=\"form__input\"\n                                            type=\"text\"\n                                            placeholder=\"Department Name\"\n                                            value={editdept}\n                                            onChange={(e)=>{\n                                                setEditDept(e.target.value);\n                                            }}\n                                        />\n                                        <button className=\"button2\" onClick={e => editpersonalinfo(e)}>SUBMIT</button>\n                                        <button className=\"button2\" onClick={togglepopup}>CLOSE</button>\n                                    </form>\n                                </ReactModal>\n                                </div>\n                            </div>\n                            <div className=\"courses\">\n                                <div>\n                                    <h2>Courses</h2>\n                                </div>\n                                <div className=\"courses-grid\">\n                                    {coursedata.current.map((val, key) => {\n                                        return (\n                                            <div key={key}>\n                                                <div className=\"course\" onClick={async () => {\n                                                    navigate(\"/\");\n                                                }}>\n                                                    <div className=\"course-details\">\n                                                        <h2>{val.title}</h2>\n                                                        <h3>{val.dept_name}</h3>\n                                                        {/* <button className=\"button\">Hello</button>\n                                        <button className=\"edit-btn\" >GO</button> */}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                           \n                            <div className=\"today-classes\">\n  <div>\n    <h2>Today's Classes</h2>\n  </div>\n  <div className=\"hour-timeline\">\n    {[...Array(14)].map((_, i) => (\n      <div key={i} className=\"hour-block\">\n        <div className=\"hour\">{i + 8}:00</div>\n        <div className=\"class-hour-blocks\">\n          {today.current\n            .filter(\n              (val) =>\n                val.start_hr <= i + 8 && val.end_hr >= i + 8 +(val.end_min == 0 ? 1 : 0)// check if class is scheduled during this hour block\n            )\n            .map((val, key) => {\n              const start = Math.max(i + 8, val.start_hr); // calculate start and end hour block indexes\n              const end = Math.min(i + 9, val.end_hr + (val.end_min > 0 ? 1 : 0));\n              const span = end - start;\n              return (\n                <div\n                  key={key}\n                  className=\"class-hour-block\"\n                  style={{ gridRow: `${start}/${start + span}` }} // span the class block over multiple hour blocks\n                >\n                  <div className=\"class\">\n                    <div className=\"class-details\">\n                      <h3>{val.title}, {val.course_id}</h3>\n                      <p>{val.start_hr}:{val.start_min} {val.start} - {val.end_hr}:{val.end_min} {val.end}</p>\n                    </div>\n                    {/* <div className=\"class-status\">\n                        <span>Active</span>\n                    </div> */}\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    ))}\n  </div>\n</div>\n\n                           \n                        </div>\n                    </div>\n                    :\n                    <div className=\"dashboard-body\">\n                        <div className=\"dashboard-main\">\n                            <div className=\"personal-info\">   \n                            <div className=\"image-container\">\n                                <img src = \"no-dp.jpg\"></img>\n                            </div>\n                                \n                                \n                               <div className=\"info-container\">\n                                <h2>Personal Information</h2>\n                                <div className=\"info-item\">\n                                    <span>Name:</span>\n                                    <span>{instname.current}</span>\n                                </div>\n                                <div className=\"info-item\">\n                                    <span>ID:</span>\n                                    <span>{instid.current}</span>\n                                </div>\n                                <div className=\"info-item\">\n                                    <span>Department:</span>\n                                    <span>{instdept.current}</span>\n                                </div>\n                                <a href=\"#\" className=\"edit-btn\">Edit</a>\n                            </div>\n                            </div>\n                            <div className=\"courses\">\n                                <div>\n                                    <h2>Courses</h2>\n                                </div>\n                                <div className=\"courses-grid\">\n                                    {coursedata.current.map((val, key) => {\n                                        return (\n                                            <div key={key}>\n                                                <div className=\"course\" onClick={async () => {\n                                                    navigate(\"/\");\n                                                }}>\n                                                    <div className=\"course-details\">\n                                                        <h2>{val.title}</h2>\n                                                        <h3>{val.dept_name}</h3>\n                                                        {/* <button className=\"button\">Hello</button>\n                                    <button className=\"edit-btn\" >GO</button> */}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                            <div className=\"today-classes\">\n                                <div>\n                                    <h2>Today's Classes</h2>\n                \n                                    \n                                    <p>No classes Today! </p>\n                                </div>\n                                {/* <div className=\"class\">\n                            <div className=\"class-details\">\n                                <h3>Introduction to Computer Science</h3>🥳🥳\n                                <p>9:00 AM - 10:00 AM</p>\n                            </div>\n                            <div className=\"class-status\">\n                                <span>Active</span>\n                            </div>\n                        </div>\n                        <div className=\"class\">\n                            <div className=\"class-details\">\n                                <h3>Data Structures and Algorithms</h3>\n                                <p>11:00 AM - 12:00 PM</p>\n                            </div>\n                            <div className=\"class-status\">\n                                <span>Active</span>\n                            </div>\n                        </div> */}\n                            </div>\n                        </div>\n                    </div>\n                :\n                <div className=\"dashboard-body\">\n                    <div className=\"dashboard-main\">\n                        <div className=\"personal-info\">\n                            <h2>Personal Information</h2>\n                            <div className=\"info-item\">\n                                <span>Name:</span>\n                                <span>{instname.current}</span>\n                            </div>\n                            <div className=\"info-item\">\n                                <span>ID:</span>\n                                <span>{instid.current}</span>\n                            </div>\n                            <div className=\"info-item\">\n                                <span>Department:</span>\n                                <span>{instdept.current}</span>\n                            </div>\n                            <a href=\"#\" className=\"edit-btn\">Edit</a>\n                        </div></div></div>\n            :\n            <h2>Busss</h2>\n    )\n};\n\n\n\n\n\n\n\n\n\n","/home/praneeth/DBIS/project/client/src/components/insights.js",["89","90","91","92","93","94","95","96","97","98","99","100","101"],[],"/home/praneeth/DBIS/project/client/src/components/dashboard.js",["102","103"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Dashboard() {\n  const navigate = useNavigate();\n  const [Status, setStatus] = useState(false);\n  const navlogin = () => {\n    navigate(\"/\");\n  };\n  var variable;\n  var variab;\n\n  const userdata = useRef(null);\n  const coursedata = useRef(null);\n  const deaddata = useRef(null);\n\n  const insights = async(e)=>{\n    e.preventDefault();\n    navigate(\"/insights\");\n  }\n\n  const sendemail = async(e) => {\n    console.log(\"Send Email\");\n    e.preventDefault();\n    const response = await Axios.get(\"http://localhost:8000/sendemail\");\n    console.log(\"Came here\");\n    if(response.data.success){\n      alert(\"Check your email box\");\n    } else{\n      alert(\"Error\");\n    }\n  }\n\n  var [datafetched, setDataFetched] = useState(false);\n  async function userdetailsfetching() {\n    const response = await Axios.get(\"http://localhost:8000/dashdisplay\");\n    if (response.data.err) {\n      console.log(\"Query error!\");\n    } else {\n      if (response.data.message) {\n        console.log(\"Session error\");\n      } else {\n        console.log(response);\n        var userdataset = await userdatasetting(response);\n        // setUserData(response.data.rows[0]);\n        console.log(\"User data set\");\n        console.log(userdata);\n      }\n    }\n  }\n  async function userdatasetting(response) {\n    console.log(\"reached user setting\");\n    //   setUserData(response.data.rows[0]);\n\n    userdata.current = response.data.stud.rows[0];\n    coursedata.current = response.data.course.rows;\n    deaddata.current=response.data.deadline.rows;\n    setDataFetched(true);\n    return \"Done\";\n  }\n  const logout = () => {\n    // setLoginStatus(false);\n    Axios.get(\"http://localhost:8000/logout\").then((response) => {\n      console.log(response);\n    });\n    navigate(\"/\");\n  };\n  useEffect(() => {\n    Axios.get(\"http://localhost:8000/login\").then((response) => {\n      if (response.data.loggedIn === true) {\n        //   setLoginStatus(response.data.user.rows[0].userID);\n        setStatus(true);\n        console.log(Status);\n      }\n    });\n    userdetailsfetching();\n  }, [Status, datafetched]);\n  return Status && datafetched ? (\n    <div className=\"dashboard-body\">\n      <div className=\"personal-info\">\n        <h2>Personal Information</h2>\n        <div className=\"info-item\">\n          <span>Name:</span>\n          <span>{userdata.current.name}</span>\n        </div>\n        <div className=\"info-item\">\n          <span>ID:</span>\n          <span>{userdata.current.roll_num}</span>\n        </div>\n        <div className=\"info-item\">\n          <span>Department:</span>\n          <span>{userdata.current.dept_name}</span>\n        </div>\n        <div className=\"info-item\">\n          <span>Hostel:</span>\n          <span>{userdata.current.hostel}</span>\n        </div>\n        <div className=\"info-item\">\n          <span>Room No:</span>\n          <span>{userdata.current.room}</span>\n        </div>\n        <div className=\"info-item\">\n          <span>Engagement level:</span>\n          <span>{userdata.current.eng_level}</span>\n        </div>\n        <button className=\"button2\" onClick={e => sendemail(e)} >Send Email</button>\n      </div>\n      <div className=\"today-classes\">\n        <div>\n          <h2>Today's Classes</h2>\n        </div>\n        <div className=\"class-grid\">\n          {coursedata.current.rowCount !== 0 ? (\n            coursedata.current.map((val, key) => {\n              return (\n                <div key={key}>\n                  <div className=\"class\">\n                    <div className=\"class-details\">\n                      <h3>\n                        {val.title}, {val.course_id}\n                      </h3>\n                      <p>\n                        {val.start_hr}:{val.start_min} {val.start} -{\" \"}\n                        {val.end_hr}:{val.end_min} {val.end}\n                      </p>\n                    </div>\n                    {/* <div className=\"class-status\">\n                                                    <span>Active</span>\n                                                </div> */}\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <div>\n              <h3>No classes Today!</h3>\n            </div>\n          )}\n        </div>\n        {/* <div className=\"class\">\n                                <div className=\"class-details\">\n                                    <h3>Introduction to Computer Science</h3>\n                                    <p>9:00 AM - 10:00 AM</p>\n                                </div>\n                                <div className=\"class-status\">\n                                    <span>Active</span>\n                                </div>\n                            </div>\n                            <div className=\"class\">\n                                <div className=\"class-details\">\n                                    <h3>Data Structures and Algorithms</h3>\n                                    <p>11:00 AM - 12:00 PM</p>\n                                </div>\n                                <div className=\"class-status\">\n                                    <span>Active</span>\n                                </div>\n                            </div> */}\n      </div>\n      <div className=\"today-classes\">\n        <div>\n          <h2>Upcoming Deadlines</h2>\n        </div>\n        <div className=\"class-grid\">\n          {deaddata.current.rowCount !== 0 ? (\n            deaddata.current.map((val, key) => {\n              variable=Date.parse(val.end_time);\n              variab=new Date(variable);\n              return (\n                <div key={key}>\n                  <div className=\"class\">\n                    <div className=\"class-details\">\n                      <h2>{val.name}</h2>\n                      <h3>\n                        {val.title}, {val.course_id}\n                      </h3>\n                      <p>\n                        submission by <b>{variab.toDateString()}</b>\n                      </p>\n                    </div>\n                    {/* <div className=\"class-status\">\n                                                    <span>Active</span>\n                                                </div> */}\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <div>\n              <h3>No Deadlines</h3>\n            </div>\n          )}\n        </div>\n        {/* <div className=\"class\">\n                                <div className=\"class-details\">\n                                    <h3>Introduction to Computer Science</h3>\n                                    <p>9:00 AM - 10:00 AM</p>\n                                </div>\n                                <div className=\"class-status\">\n                                    <span>Active</span>\n                                </div>\n                            </div>\n                            <div className=\"class\">\n                                <div className=\"class-details\">\n                                    <h3>Data Structures and Algorithms</h3>\n                                    <p>11:00 AM - 12:00 PM</p>\n                                </div>\n                                <div className=\"class-status\">\n                                    <span>Active</span>\n                                </div>\n                            </div> */}\n      </div>\n      <button onClick={insights}>Insights</button>\n      <button onClick={logout}>Logout</button>\n    </div>\n  ) : (\n    <div className=\"openpage\">\n      <h1>User Not Logged In</h1>\n      <h1>Please Login</h1>\n      <button className=\"button-17\" onClick={navlogin}>\n        LOGIN\n      </button>\n    </div>\n  );\n}\n\nexport default Dashboard;","/home/praneeth/DBIS/project/client/src/components/course.js",["104","105","106","107","108","109","110"],[],"import React, {useRef, useState} from 'react';\nimport Axios from 'axios';\nimport \"../style/instructor.css\";\nimport { useParams } from 'react-router-dom';\n\n// course details, instructors, number of students taking the course, deadlines\n\nexport default function Course() {\n\n    Axios.defaults.withCredentials = true;\n\n    let { course_id } = useParams();\n    var coursename = useRef(\"Name\");\n    var coursedept = useRef(\"Department\");\n    var [editname, setEditName] = useState(coursename.current);\n    var [editdept, setEditDept] = useState(coursedept.current);\n    var [editpopup, setEditPopup] = useState(false);\n\n    const togglepopup = async(e) => {\n        e.preventDefault();\n        setEditPopup(true);\n    }\n\n    const editcourseinfo = async(e)=>{\n        e.preventDefault();\n        if(editname===\"\" || editdept===\"\"){\n            alert(\"None of the fields should be left empty\");\n            return 0;\n        } else {\n            var wait = Axios.post(\"/editcourseinfo\",{\n                editname: editname,\n                editdept: editdept\n            }).then((response)=>{\n                console.log(response);\n                if(response.data.message){\n                    alert(\"There seems to be a problem with our server. Please hang on while we fix it!\");\n                } else{\n                    window.location.reload();\n                }\n            })\n        }\n    }\n    \n    var infofetch = async () =>{\n        var result = await Axios.post(\"/courseinfo\",{course_id:course_id}).then((response)=>{\n            return response;\n        });\n        if(result.data.message){\n            alert(\"There seems to be a problem with our server. Please hang on while we fix it!\");\n            return 0;\n        } else if(result.data.courseerror){\n            alert(\"Data corresponding to this course is not found!\");\n            return 0;\n        } else if(result.data.noinstructor){\n            \n        }\n    }\n\n    return (\n        <div>Hello</div>\n    //     <div className=\"dashboard-body\">\n    //         <div className=\"dashboard-main\">\n    //             <div className=\"personal-info\">\n    //                 <h2>Course Information</h2>\n    //                 <div className=\"info-item\">\n    //                     <span>Name:</span>\n    //                     <span>{coursename.current}</span>\n    //                 </div>\n    //                 <div className=\"info-item\">\n    //                     <span>ID:</span>\n    //                     <span>{course_id}</span>\n    //                 </div>\n    //                 <div className=\"info-item\">\n    //                     <span>Department:</span>\n    //                     <span>{coursedept.current}</span>\n    //                 </div>\n    //                 <button className=\"button2\" onClick={togglepopup}>EDIT</button>\n    //                 <ReactModal\n    //                     isOpen={editpopup}\n    //                     ariaHideApp={false}\n    //                     contentLabel=\"Example Modal\"\n    //                 >\n    //                     <form className=\"form\">\n    //                         <input\n    //                             className=\"form__input\"\n    //                             type=\"text\"\n    //                             placeholder=\"Name\"\n    //                             value={editname}\n    //                             onChange={(e) => {\n    //                                 setEditName(e.target.value);\n    //                             }}\n    //                         />\n    //                         <input\n    //                             className=\"form__input\"\n    //                             type=\"text\"\n    //                             placeholder=\"Department Name\"\n    //                             value={editdept}\n    //                             onChange={(e) => {\n    //                                 setEditDept(e.target.value);\n    //                             }}\n    //                         />\n    //                         <button className=\"button2\" onClick={e => editcourseinfo(e)}>SUBMIT</button>\n    //                         <button className=\"button2\" onClick={togglepopup}>CLOSE</button>\n    //                     </form>\n    //                 </ReactModal>\n    //             </div>\n    //             <div className=\"courses\">\n    //                 <div>\n    //                     <h2>Courses</h2>\n    //                 </div>\n    //                 <div className=\"courses-grid\">\n    //                     {coursedata.current.map((val, key) => {\n    //                         return (\n    //                             <div key={key}>\n    //                                 <div className=\"course\" onClick={async () => {\n    //                                     gotocourse(val.course_id);\n    //                                 }}>\n    //                                     <div className=\"course-details\">\n    //                                         <h3>{val.title}, {val.dept_name}</h3>\n    //                                     </div>\n    //                                 </div>\n    //                             </div>\n    //                         );\n    //                     })}\n    //                 </div>\n    //             </div>\n    //             <div className=\"today-classes\">\n    //                 <div>\n    //                     <h2>Today's Classes</h2>\n    //                 </div>\n    //                 <div className=\"class-grid\">\n    //                     {today.current.map((val, key) => {\n    //                         return (\n    //                             <div key={key}>\n    //                                 <div className=\"class\">\n    //                                     <div className=\"class-details\">\n    //                                         <h3>{val.title}, {val.course_id}</h3>\n    //                                         <p>{val.start_hr}:{val.start_min} {val.start} - {val.end_hr}:{val.end_min} {val.end}</p>\n    //                                     </div>\n    //                                     {/* <div className=\"class-status\">\n    //                                 <span>Active</span>\n    //                             </div> */}\n    //                                 </div>\n    //                             </div>\n    //                         );\n    //                     })}\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     </div>\n\n    )\n\n};","/home/praneeth/DBIS/project/client/src/components/ratingstyles.js",[],[],"/home/praneeth/DBIS/project/client/src/index.js",[],[],"/home/praneeth/DBIS/project/client/src/reportWebVitals.js",[],[],"/home/praneeth/DBIS/project/client/src/components/insightsform.js",["111","112","113","114","115","116"],[],{"ruleId":"117","severity":1,"message":"118","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":22,"column":9,"nodeType":"119","messageId":"120","endLine":22,"endColumn":23},{"ruleId":"117","severity":1,"message":"122","line":35,"column":9,"nodeType":"119","messageId":"120","endLine":35,"endColumn":13},{"ruleId":"117","severity":1,"message":"122","line":58,"column":9,"nodeType":"119","messageId":"120","endLine":58,"endColumn":13},{"ruleId":"117","severity":1,"message":"122","line":78,"column":9,"nodeType":"119","messageId":"120","endLine":78,"endColumn":13},{"ruleId":"117","severity":1,"message":"123","line":8,"column":12,"nodeType":"119","messageId":"120","endLine":8,"endColumn":20},{"ruleId":"117","severity":1,"message":"124","line":9,"column":12,"nodeType":"119","messageId":"120","endLine":9,"endColumn":16},{"ruleId":"117","severity":1,"message":"122","line":16,"column":13,"nodeType":"119","messageId":"120","endLine":16,"endColumn":17},{"ruleId":"117","severity":1,"message":"125","line":14,"column":18,"nodeType":"119","messageId":"120","endLine":14,"endColumn":27},{"ruleId":"117","severity":1,"message":"122","line":88,"column":17,"nodeType":"119","messageId":"120","endLine":88,"endColumn":21},{"ruleId":"117","severity":1,"message":"126","line":113,"column":11,"nodeType":"119","messageId":"120","endLine":113,"endColumn":17},{"ruleId":"127","severity":1,"message":"128","line":129,"column":37,"nodeType":"129","endLine":129,"endColumn":60},{"ruleId":"130","severity":1,"message":"131","line":213,"column":76,"nodeType":"132","messageId":"133","endLine":213,"endColumn":78},{"ruleId":"127","severity":1,"message":"128","line":251,"column":33,"nodeType":"129","endLine":251,"endColumn":56},{"ruleId":"134","severity":1,"message":"135","line":269,"column":33,"nodeType":"129","endLine":269,"endColumn":66},{"ruleId":"134","severity":1,"message":"135","line":340,"column":29,"nodeType":"129","endLine":340,"endColumn":62},{"ruleId":"117","severity":1,"message":"136","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":18},{"ruleId":"117","severity":1,"message":"137","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":16},{"ruleId":"117","severity":1,"message":"138","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":19},{"ruleId":"117","severity":1,"message":"139","line":7,"column":21,"nodeType":"119","messageId":"120","endLine":7,"endColumn":26},{"ruleId":"117","severity":1,"message":"140","line":7,"column":28,"nodeType":"119","messageId":"120","endLine":7,"endColumn":34},{"ruleId":"117","severity":1,"message":"141","line":17,"column":12,"nodeType":"119","messageId":"120","endLine":17,"endColumn":16},{"ruleId":"117","severity":1,"message":"142","line":17,"column":18,"nodeType":"119","messageId":"120","endLine":17,"endColumn":25},{"ruleId":"117","severity":1,"message":"143","line":32,"column":11,"nodeType":"119","messageId":"120","endLine":32,"endColumn":16},{"ruleId":"117","severity":1,"message":"144","line":121,"column":11,"nodeType":"119","messageId":"120","endLine":121,"endColumn":22},{"ruleId":"117","severity":1,"message":"145","line":125,"column":11,"nodeType":"119","messageId":"120","endLine":125,"endColumn":17},{"ruleId":"117","severity":1,"message":"146","line":131,"column":11,"nodeType":"119","messageId":"120","endLine":131,"endColumn":15},{"ruleId":"117","severity":1,"message":"147","line":168,"column":15,"nodeType":"119","messageId":"120","endLine":168,"endColumn":18},{"ruleId":"117","severity":1,"message":"148","line":181,"column":11,"nodeType":"119","messageId":"120","endLine":181,"endColumn":21},{"ruleId":"117","severity":1,"message":"149","line":45,"column":13,"nodeType":"119","messageId":"120","endLine":45,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":78,"column":6,"nodeType":"152","endLine":78,"endColumn":27,"suggestions":"153"},{"ruleId":"117","severity":1,"message":"154","line":15,"column":20,"nodeType":"119","messageId":"120","endLine":15,"endColumn":31},{"ruleId":"117","severity":1,"message":"155","line":16,"column":20,"nodeType":"119","messageId":"120","endLine":16,"endColumn":31},{"ruleId":"117","severity":1,"message":"156","line":17,"column":10,"nodeType":"119","messageId":"120","endLine":17,"endColumn":19},{"ruleId":"117","severity":1,"message":"144","line":19,"column":11,"nodeType":"119","messageId":"120","endLine":19,"endColumn":22},{"ruleId":"117","severity":1,"message":"157","line":24,"column":11,"nodeType":"119","messageId":"120","endLine":24,"endColumn":25},{"ruleId":"117","severity":1,"message":"122","line":30,"column":17,"nodeType":"119","messageId":"120","endLine":30,"endColumn":21},{"ruleId":"117","severity":1,"message":"158","line":44,"column":9,"nodeType":"119","messageId":"120","endLine":44,"endColumn":18},{"ruleId":"117","severity":1,"message":"136","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":18},{"ruleId":"117","severity":1,"message":"141","line":18,"column":12,"nodeType":"119","messageId":"120","endLine":18,"endColumn":16},{"ruleId":"117","severity":1,"message":"147","line":170,"column":15,"nodeType":"119","messageId":"120","endLine":170,"endColumn":18},{"ruleId":"117","severity":1,"message":"148","line":184,"column":11,"nodeType":"119","messageId":"120","endLine":184,"endColumn":21},{"ruleId":"150","severity":1,"message":"159","line":190,"column":8,"nodeType":"152","endLine":190,"endColumn":28,"suggestions":"160"},{"ruleId":"117","severity":1,"message":"161","line":259,"column":69,"nodeType":"119","messageId":"120","endLine":259,"endColumn":74},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'passwordtoggle' is assigned a value but never used.","'wait' is assigned a value but never used.","'roll_num' is assigned a value but never used.","'name' is assigned a value but never used.","'setEdited' is assigned a value but never used.","'logout' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'ReactModal' is defined but never used.","'FaStar' is defined but never used.","'Container' is defined but never used.","'Radio' is defined but never used.","'Rating' is defined but never used.","'rate' is assigned a value but never used.","'setRate' is assigned a value but never used.","'scale' is assigned a value but never used.","'togglepopup' is assigned a value but never used.","'change' is assigned a value but never used.","'calc' is assigned a value but never used.","'pus' is assigned a value but never used.","'activeStar' is assigned a value but never used.","'userdataset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userdetailsfetching'. Either include it or remove the dependency array.","ArrayExpression",["162"],"'setEditName' is assigned a value but never used.","'setEditDept' is assigned a value but never used.","'editpopup' is assigned a value but never used.","'editcourseinfo' is assigned a value but never used.","'infofetch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'roll_num_fr'. Either include it or remove the dependency array.",["163"],"'chane' is assigned a value but never used.",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [Status, datafetched, userdetailsfetching]",{"range":"168","text":"169"},"Update the dependencies array to be: [fetched, editpopup, roll_num_fr]",{"range":"170","text":"171"},[2190,2211],"[Status, datafetched, userdetailsfetching]",[5980,6000],"[fetched, editpopup, roll_num_fr]"]