[{"/home/divyeswar/Desktop/dbisproj/client/src/index.js":"1","/home/divyeswar/Desktop/dbisproj/client/src/reportWebVitals.js":"2","/home/divyeswar/Desktop/dbisproj/client/src/App.js":"3","/home/divyeswar/Desktop/dbisproj/client/src/components/login.js":"4","/home/divyeswar/Desktop/dbisproj/client/src/components/landingpage.js":"5","/home/divyeswar/Desktop/dbisproj/client/src/components/dashboard.js":"6","/home/divyeswar/Desktop/dbisproj/client/src/components/instructor.js":"7","/home/divyeswar/Desktop/dbisproj/client/src/components/parentdetails.js":"8","/home/divyeswar/Desktop/dbisproj/client/src/components/infogather.js":"9"},{"size":535,"mtime":1680438805943,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1680438805943,"results":"12","hashOfConfig":"11"},{"size":2023,"mtime":1680813685513,"results":"13","hashOfConfig":"11"},{"size":7239,"mtime":1680813685513,"results":"14","hashOfConfig":"11"},{"size":2204,"mtime":1680813685513,"results":"15","hashOfConfig":"11"},{"size":7326,"mtime":1680904778517,"results":"16","hashOfConfig":"11"},{"size":15654,"mtime":1680902214268,"results":"17","hashOfConfig":"11"},{"size":7014,"mtime":1680813685513,"results":"18","hashOfConfig":"11"},{"size":12132,"mtime":1680899901254,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"fhyr4h",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/home/divyeswar/Desktop/dbisproj/client/src/index.js",[],[],[],"/home/divyeswar/Desktop/dbisproj/client/src/reportWebVitals.js",[],[],"/home/divyeswar/Desktop/dbisproj/client/src/App.js",[],[],"/home/divyeswar/Desktop/dbisproj/client/src/components/login.js",["50","51","52","53","54"],[],"import React, { useEffect, useState } from 'react';\nimport Axios from \"axios\";\nimport styles from \"../style/login.css\"\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction Login() {\n\n  Axios.defaults.withCredentials = true;\n  var navigate = useNavigate();\n  const [rollnumreg, setRollNumReg] = useState(\"\");\n  const [passwordreg, setPasswordReg] = useState(\"\");\n  const [namereg, setNameReg] = useState(\"\");\n  const [passwordtype, setPasswordType] = useState(\"password\");\n  // const [hostelnumreg, setHostelNumReg] = useState(\"\");\n  // const [roomnumreg, setRoomNumReg] = useState(\"\");\n\n  const [useridlog, setUserIDLog] = useState(\"\");\n  const [passwordlog, setPasswordLog] = useState(\"\");\n\n\n  const passwordtoggle = (e) => {\n    e.preventDefault();\n    if (passwordtype === \"password\") {\n      setPasswordType(\"text\");\n    } else {\n      setPasswordType(\"password\");\n    }\n  }\n\n  const studentlogin = async (e) => {\n    e.preventDefault();\n    console.log(e);\n    console.log(\"Entered client-side student login\");\n    var wait = await Axios.post(\"http://localhost:8000/studentlogin\", {\n      user_id: useridlog,\n      password: passwordlog,\n    }).then((response) => {\n      console.log(\"Response received: \" + response);\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n      } else {\n        console.log(response);\n        if (response.data.pres) {\n          setLoginStatus(response.data.resul.rows[0].user_id);\n          navigate('/dashboard');\n        }\n        else {\n          navigate('/infogather');\n        }\n      }\n    });\n  }\n\n  const instlogin = async (e) => {\n    e.preventDefault();\n    console.log(\"Entered client-side instructor login\");\n    var wait = await Axios.post(\"http://localhost:8000/instlogin\", {\n      user_id: useridlog,\n      password: passwordlog,\n    }).then((response) => {\n      console.log(\"Response received: \" + response);\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n      } else if (response.data.success) {\n        navigate('/instructor');\n      }\n    });\n  }\n\n\n  const [loginStatus, setLoginStatus] = useState(\"\");\n  const [registerStatus, setRegisterStatus] = useState(false);\n  const [Status, setStatus] = useState(false);\n\n  const register = async (e) => {\n    e.preventDefault();\n    var wait = await Axios.post(\"http://localhost:8000/register\", {\n      rollnumber: rollnumreg,\n      password: passwordreg,\n      name: namereg,\n    }).then((response) => {\n      setRegisterStatus(true);\n      console.log(response);\n      window.location.reload();\n\n    })\n  }\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:8000/login\").then((response) => {\n      if (response.data.loggedIn === true) {\n        setLoginStatus(response.data.user.rows[0].userID);\n        setStatus(true);\n        console.log(Status);\n      }\n    });\n  }, [Status, registerStatus]);\n\n  const [distog, setDisTog] = useState(false); //false is for student\n\n  const distogglestud = (e) => {\n    e.preventDefault();\n    setDisTog(false);\n  }\n\n  const distoggleinst = (e) => {\n    e.preventDefault();\n    setDisTog(true);\n  }\n\n  const handleToggle = (e) => {\n    e.preventDefault();\n    setTogActive(!togActive);\n  }\n  const [togActive, setTogActive] = useState(false);//false is for signIn\n  return (\n    Status ?\n      navigate(\"/redirect\") :\n      <div className='body'>\n\n        <div className=\"main\">\n          <div className={togActive ? \"container a-container\" : \"container a-container is-txl\"} id=\"a-container\">\n            <form className=\"form\" id=\"a-form\" method=\"\" action=\"\">\n              <h2 className=\"form_title title\">Create Account</h2>\n              {/* <span className=\"form__span\">or use email for registration</span> */}\n              <input\n                className=\"form__input\"\n                type=\"text\"\n                placeholder=\"Name\"\n                onChange={(e) => {\n                  setNameReg(e.target.value);\n                }}\n              />\n              <input\n                className=\"form__input\"\n                type=\"number\"\n                placeholder=\"Roll Number\"\n                onChange={(e) => {\n                  setRollNumReg(e.target.value);\n                }}\n              />\n              <input\n                className=\"form__input\"\n                type={passwordtype}\n                placeholder=\"Password\"\n                onChange={(e) => {\n                  setPasswordReg(e.target.value);\n                }} />\n              <button className=\"form__button button\" onClick={register}>SIGN UP</button>\n            </form>\n          </div>\n          <div className={togActive ? \"container b-container\" : \"container b-container is-txl is-z200\"} id=\"b-container\">\n            <form className='form' id='b-form' method='' action=''>\n              <h2 className='form_title title'>Sign In to Website</h2>\n              <div className='st_inst_toggle'>\n                <button className={distog ? 'select_btn button2 dis' : 'select_btn button2'} onClick={e => distogglestud(e)}>Student</button>\n                <button className={distog ? 'select_btn button2' : 'select_btn button2 dis'} onClick={e => distoggleinst(e)}>Instructor</button>\n              </div>\n              <input\n                className='form__input'\n                type=\"text\"\n                placeholder={distog ? 'Instructor ID' : 'Roll Number'}\n                onChange={(e) => {\n                  setUserIDLog(e.target.value);\n                }}\n              />\n              <input\n                className='form__input'\n                type=\"password\"\n                placeholder='Password'\n                onChange={(e) => {\n                  setPasswordLog(e.target.value);\n                }}\n              />\n              <h3 className='form_title title'>{loginStatus}</h3>\n\n              <button className='form__button button' onClick={distog ? instlogin : studentlogin}>SIGN IN</button>\n            </form>\n          </div>\n          <div className={togActive ? \"switch\" : \"switch is-txr\"} id=\"switch-cnt\">\n            <div className={togActive ? \"switch__circle\" : \"switch__circle is-txr\"}></div>\n            <div className={togActive ? \"switch__circle switch__circle--t\" : \"switch__circle switch__circle--t is-txr\"}></div>\n\n\n\n\n            <div className={togActive ? \"switch__container\" : \"switch__container is-hidden\"} id=\"switch-c1\">\n              <h2 className=\"switch__title title\">Welcome Buddy!</h2>\n              <p className=\"switch__description description\">Looking for the Login page?<br></br>Here you go!</p>\n              <button className=\"switch__button button switch-btn\" id='signin' onClick={e => handleToggle(e)}>SIGN IN</button>\n            </div>\n\n\n\n\n            <div className={togActive ? \"switch__container is-hidden\" : \"switch__container\"} id=\"switch-c2\">\n              <h2 className=\"switch__title title\">Hey There!</h2>\n              <p className=\"switch__description description\">Is this your first time here? <br></br>Sign up to start your journey with us!</p>\n              <button className=\"switch__button button switch-btn\" onClick={e => handleToggle(e)}>SIGN UP</button>\n            </div>\n\n\n\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Login;","/home/divyeswar/Desktop/dbisproj/client/src/components/landingpage.js",["55","56","57"],[],"import React, {useEffect,useState,useRef} from \"react\";\nimport Axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\n\nfunction LandingPage(){\n    const navigate = useNavigate();\n    const [Status, setStatus] = useState(false);\n    const [roll_num,setRoll_num]=useState(\"\");\n    const [name,setName]=useState(\"\");\n    var resu = useRef([]);\n\n    const navlogin=()=>{\n        navigate('/');\n    };\n    const addval=async ()=>{\n        var wait = await Axios.post(\"http://localhost:8000/insert\",{\n      rollnumber: \"200050033\",\n      name: \"divyeswar\",\n      dept_name: \"cs\",\n      eng_level:\"3\",\n      hostel:\"9\",\n      room:\"250\"\n    }).then((response)=>{\n      console.log(response);\n      navigate('/dashboard');\n\n    })\n    }\n    const logout = () => {\n        // setLoginStatus(false);\n        Axios.get(\"http://localhost:8000/logout\").then((response) => {\n          console.log(response);\n        });\n        navigate(\"/\");\n      };\n    useEffect(()=>{\n        Axios.get(\"http://localhost:8000/login\").then((response) => {\n            if (response.data.loggedIn === true) {\n            //   setLoginStatus(response.data.user.rows[0].userID);\n              setStatus(true);\n              console.log(Status);\n              resu.current=response.data.user\n            }\n          });\n        }, [Status]);\n    return(\n        Status?(\n        <div className=\"landingpage\">\n            <h1>\n                Signup Successful\n            </h1>\n            <h1>\n                Please login to continue\n            </h1>\n            <input type=\"text\" placeholder=\"Roll Number\"\n          onChange={(e)=>{\n            setRoll_num(e.target.value);\n          }}/>\n          <input type=\"\" placeholder=\"Password\"\n          onChange={(e)=>{\n            setName(e.target.value);\n          }}/>\n            <button onClick={addval}>val</button>\n            <button onClick={navlogin}>Login</button>\n            <button onClick={logout}>Logout</button>\n        </div>)\n        :\n        (<div className=\"openpage\">\n        <h1>User Not Logged In</h1>\n        <h1>Please Login</h1>\n        <button className=\"button-17\" onClick={navlogin}>LOGIN</button>\n    </div>)\n    )\n}\n\nexport default LandingPage;","/home/divyeswar/Desktop/dbisproj/client/src/components/dashboard.js",["58","59"],[],"/home/divyeswar/Desktop/dbisproj/client/src/components/instructor.js",["60","61","62","63","64"],[],"/home/divyeswar/Desktop/dbisproj/client/src/components/parentdetails.js",[],[],"/home/divyeswar/Desktop/dbisproj/client/src/components/infogather.js",[],[],{"ruleId":"65","severity":1,"message":"66","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":22,"column":9,"nodeType":"67","messageId":"68","endLine":22,"endColumn":23},{"ruleId":"65","severity":1,"message":"70","line":35,"column":9,"nodeType":"67","messageId":"68","endLine":35,"endColumn":13},{"ruleId":"65","severity":1,"message":"70","line":58,"column":9,"nodeType":"67","messageId":"68","endLine":58,"endColumn":13},{"ruleId":"65","severity":1,"message":"70","line":78,"column":9,"nodeType":"67","messageId":"68","endLine":78,"endColumn":13},{"ruleId":"65","severity":1,"message":"71","line":8,"column":12,"nodeType":"67","messageId":"68","endLine":8,"endColumn":20},{"ruleId":"65","severity":1,"message":"72","line":9,"column":12,"nodeType":"67","messageId":"68","endLine":9,"endColumn":16},{"ruleId":"65","severity":1,"message":"70","line":16,"column":13,"nodeType":"67","messageId":"68","endLine":16,"endColumn":17},{"ruleId":"65","severity":1,"message":"73","line":29,"column":13,"nodeType":"67","messageId":"68","endLine":29,"endColumn":24},{"ruleId":"74","severity":1,"message":"75","line":62,"column":6,"nodeType":"76","endLine":62,"endColumn":27,"suggestions":"77"},{"ruleId":"65","severity":1,"message":"78","line":14,"column":18,"nodeType":"67","messageId":"68","endLine":14,"endColumn":27},{"ruleId":"65","severity":1,"message":"70","line":88,"column":17,"nodeType":"67","messageId":"68","endLine":88,"endColumn":21},{"ruleId":"65","severity":1,"message":"79","line":113,"column":11,"nodeType":"67","messageId":"68","endLine":113,"endColumn":17},{"ruleId":"80","severity":1,"message":"81","line":253,"column":33,"nodeType":"82","endLine":253,"endColumn":66},{"ruleId":"80","severity":1,"message":"81","line":320,"column":29,"nodeType":"82","endLine":320,"endColumn":62},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'passwordtoggle' is assigned a value but never used.","'wait' is assigned a value but never used.","'roll_num' is assigned a value but never used.","'name' is assigned a value but never used.","'userdataset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userdetailsfetching'. Either include it or remove the dependency array.","ArrayExpression",["83"],"'setEdited' is assigned a value but never used.","'logout' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"84","fix":"85"},"Update the dependencies array to be: [Status, datafetched, userdetailsfetching]",{"range":"86","text":"87"},[1799,1820],"[Status, datafetched, userdetailsfetching]"]