[{"/home/praneeth/DBIS/project/client/src/index.js":"1","/home/praneeth/DBIS/project/client/src/App.js":"2","/home/praneeth/DBIS/project/client/src/reportWebVitals.js":"3","/home/praneeth/DBIS/project/client/src/components/login.js":"4","/home/praneeth/DBIS/project/client/src/components/dashboard.js":"5","/home/praneeth/DBIS/project/client/src/components/infogather.js":"6","/home/praneeth/DBIS/project/client/src/components/parentdetails.js":"7","/home/praneeth/DBIS/project/client/src/components/landingpage.js":"8","/home/praneeth/DBIS/project/client/src/components/instructor.js":"9","/home/praneeth/DBIS/project/client/src/components/course.js":"10","/home/praneeth/DBIS/project/client/src/components/insights.js":"11"},{"size":535,"mtime":1680333484065,"results":"12","hashOfConfig":"13"},{"size":2235,"mtime":1680906703725,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1680333484065,"results":"15","hashOfConfig":"13"},{"size":7509,"mtime":1680972288040,"results":"16","hashOfConfig":"13"},{"size":7809,"mtime":1680987665226,"results":"17","hashOfConfig":"13"},{"size":12132,"mtime":1680815687709,"results":"18","hashOfConfig":"13"},{"size":7014,"mtime":1680700530069,"results":"19","hashOfConfig":"13"},{"size":2204,"mtime":1680813498212,"results":"20","hashOfConfig":"13"},{"size":18902,"mtime":1680907260641,"results":"21","hashOfConfig":"13"},{"size":6469,"mtime":1680875416622,"results":"22","hashOfConfig":"13"},{"size":1899,"mtime":1680907012899,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1rgo9og",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/praneeth/DBIS/project/client/src/index.js",[],[],[],"/home/praneeth/DBIS/project/client/src/App.js",[],[],"/home/praneeth/DBIS/project/client/src/reportWebVitals.js",[],[],"/home/praneeth/DBIS/project/client/src/components/login.js",["61","62","63","64","65"],[],"/home/praneeth/DBIS/project/client/src/components/dashboard.js",["66","67"],[],"/home/praneeth/DBIS/project/client/src/components/infogather.js",[],[],"/home/praneeth/DBIS/project/client/src/components/parentdetails.js",[],[],"/home/praneeth/DBIS/project/client/src/components/landingpage.js",["68","69","70"],[],"import React, {useEffect,useState,useRef} from \"react\";\nimport Axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\n\nfunction LandingPage(){\n    const navigate = useNavigate();\n    const [Status, setStatus] = useState(false);\n    const [roll_num,setRoll_num]=useState(\"\");\n    const [name,setName]=useState(\"\");\n    var resu = useRef([]);\n\n    const navlogin=()=>{\n        navigate('/');\n    };\n    const addval=async ()=>{\n        var wait = await Axios.post(\"http://localhost:8000/insert\",{\n      rollnumber: \"200050033\",\n      name: \"divyeswar\",\n      dept_name: \"cs\",\n      eng_level:\"3\",\n      hostel:\"9\",\n      room:\"250\"\n    }).then((response)=>{\n      console.log(response);\n      navigate('/dashboard');\n\n    })\n    }\n    const logout = () => {\n        // setLoginStatus(false);\n        Axios.get(\"http://localhost:8000/logout\").then((response) => {\n          console.log(response);\n        });\n        navigate(\"/\");\n      };\n    useEffect(()=>{\n        Axios.get(\"http://localhost:8000/login\").then((response) => {\n            if (response.data.loggedIn === true) {\n            //   setLoginStatus(response.data.user.rows[0].userID);\n              setStatus(true);\n              console.log(Status);\n              resu.current=response.data.user\n            }\n          });\n        }, [Status]);\n    return(\n        Status?(\n        <div className=\"landingpage\">\n            <h1>\n                Signup Successful\n            </h1>\n            <h1>\n                Please login to continue\n            </h1>\n            <input type=\"text\" placeholder=\"Roll Number\"\n          onChange={(e)=>{\n            setRoll_num(e.target.value);\n          }}/>\n          <input type=\"\" placeholder=\"Password\"\n          onChange={(e)=>{\n            setName(e.target.value);\n          }}/>\n            <button onClick={addval}>val</button>\n            <button onClick={navlogin}>Login</button>\n            <button onClick={logout}>Logout</button>\n        </div>)\n        :\n        (<div className=\"openpage\">\n        <h1>User Not Logged In</h1>\n        <h1>Please Login</h1>\n        <button className=\"button-17\" onClick={navlogin}>LOGIN</button>\n    </div>)\n    )\n}\n\nexport default LandingPage;","/home/praneeth/DBIS/project/client/src/components/instructor.js",["71","72"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport ReactModal from 'react-modal';\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../style/instructor.css\";\n\nexport default function Instructor() {\n\n    Axios.defaults.withCredentials = true;\n\n    const navigate = useNavigate();\n\n    var [fetched, setFetched] = useState(false);\n    // var [edited, setEdited] = useState(false);\n    var [coursespresent, setCoursesPresent] = useState(false);\n    var [classestoday, setClassesToday] = useState(false);\n    var instname = useRef(\"Name\");\n    var instid = useRef(\"212\");\n    var instdept = useRef(\"Comp. Sci.\");\n    var coursedata = useRef(null);\n    var [editname, setEditName] = useState(instname.current);\n    var [editdept, setEditDept] = useState(instdept.current);\n    var today = useRef(null);\n    var [editpopup, setEditPopup] = useState(false);\n    // const [instname, setInstName] = useRef(\"Name\");\n    // const [instid, setInstID] = useRef(\"2000\");\n    // const [instdept, setInstDept] = useRef(\"Comp. Sci.\");\n    // const [courses, ]\n\n    var infofetch = async () => {\n        var result = await Axios.get(\"/instructorinfo\").then((response) => {\n            return response;\n        });\n        if (result.data.message) {\n            alert(\"There seems to be a problem with our server. Please hang on while we try to fix it!\");\n            return 0;\n        } else if (result.data.insterror) {\n            alert(\"Your data is not found in our database\");\n            return 0;\n        } else if (result.data.nocourses) {\n            instname.current = result.data.instname;\n            instid.current = result.data.instid;\n            instdept.current = result.data.instdept;\n            setEditDept(instdept.current);\n            setEditName(instname.current);\n            setFetched(true);\n            return 1;\n        } else if (result.data.noclassestoday) {\n            instname.current = result.data.instname;\n            instid.current = result.data.instid;\n            instdept.current = result.data.instdept;\n            coursedata.current = result.data.instinfo.rows;\n            setEditDept(instdept.current);\n            setEditName(instname.current);\n            setCoursesPresent(true);\n            setFetched(true);\n            return 1;\n        } else {\n            instname.current = result.data.instname;\n            instid.current = result.data.instid;\n            instdept.current = result.data.instdept;\n            coursedata.current = result.data.instinfo.rows;\n            today.current = result.data.today.rows;\n            setEditDept(instdept.current);\n            setEditName(instname.current);\n            setCoursesPresent(true);\n            setFetched(true);\n            setClassesToday(true);\n            return 1;\n        }\n    }\n\n    useEffect(() => {\n        infofetch();\n    }, [fetched, coursespresent, classestoday]);\n\n    const togglepopup = async (e) => {\n        e.preventDefault();\n        setEditPopup(!editpopup);\n    }\n\n    var editpersonalinfo = async (e) => {\n        e.preventDefault();\n        if (editname === \"\" || editdept === \"\") {\n            alert(\"None of the fields should be left empty!\");\n            return 0;\n        } else {\n            var wait = Axios.post(\"/editinstinfo\", {\n                editname: editname,\n                editdept: editdept\n            }).then((response) => {\n                console.log(response);\n                if (response.data.message) {\n                    alert(\"There seems to be a problem with our server. Please hang on while we fix it!\");\n                } else {\n                    console.log(\"Ippudocchindhii\");\n                    window.location.reload();\n                    // setEdited(!edited);\n                    // setEditPopup(false);\n                }\n                return response;\n            });\n            // if((await wait).data.message){\n            //     alert(\"There seems to be a problem with our server. Please hang on while we fix it!\");\n            // } else{\n            //     console.log(\"Vacchindhi!\");\n            //     setEdited(!edited);\n            //     setEditPopup(false);\n            // }\n        }\n    }\n\n    const gotocourse = async (x) => {\n        console.log(\"Goto \", x);\n        navigate(\"/course/\" + x);\n    }\n\n    const logout = () => {\n        // setLoginStatus(false);\n        Axios.get(\"http://localhost:8000/logout\").then((response) => {\n            console.log(response);\n        });\n        navigate(\"/\");\n    };\n\n    return (\n        fetched ?\n            coursespresent ?\n                classestoday ?\n                    <div className=\"dashboard-body\">\n                        <div className=\"dashboard-main\">\n                            <div className=\"personal-info\">\n                                <h2>Personal Information</h2>\n                                <div className=\"info-item\">\n                                    <span>Name:</span>\n                                    <span>{instname.current}</span>\n                                </div>\n                                <div className=\"info-item\">\n                                    <span>ID:</span>\n                                    <span>{instid.current}</span>\n                                </div>\n                                <div className=\"info-item\">\n                                    <span>Department:</span>\n                                    <span>{instdept.current}</span>\n                                </div>\n                                <button className=\"button2\" onClick={e => togglepopup(e)}>EDIT</button>\n                                <ReactModal\n                                    isOpen={editpopup}\n                                    ariaHideApp={false}\n                                    contentLabel=\"Example Modal\"\n                                >\n                                    <form className=\"form\">\n                                        <input\n                                            className=\"form__input\"\n                                            type=\"text\"\n                                            placeholder=\"Name\"\n                                            value={editname}\n                                            onChange={(e) => {\n                                                setEditName(e.target.value);\n                                            }}\n                                        />\n                                        <input\n                                            className=\"form__input\"\n                                            type=\"text\"\n                                            placeholder=\"Department Name\"\n                                            value={editdept}\n                                            onChange={(e) => {\n                                                setEditDept(e.target.value);\n                                            }}\n                                        />\n                                        <button className=\"button2\" onClick={e => editpersonalinfo(e)}>SUBMIT</button>\n                                        <button className=\"button2\" onClick={togglepopup}>CLOSE</button>\n                                    </form>\n                                </ReactModal>\n                            </div>\n                            <div className=\"courses\">\n                                <div>\n                                    <h2>Courses</h2>\n                                </div>\n                                <div className=\"courses-grid\">\n                                    {coursedata.current.map((val, key) => {\n                                        return (\n                                            <div key={key}>\n                                                <div className=\"course\" onClick={async () => {\n                                                    gotocourse(val.course_id);\n                                                }}>\n                                                    <div className=\"course-details\">\n                                                        <h3>{val.title}, {val.dept_name}</h3>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                            <div className=\"today-classes\">\n                                <div>\n                                    <h2>Today's Classes</h2>\n                                </div>\n                                <div className=\"class-grid\">\n                                    {today.current.map((val, key) => {\n                                        return (\n                                            <div key={key}>\n                                                <div className=\"class\">\n                                                    <div className=\"class-details\">\n                                                        <h3>{val.title}, {val.course_id}</h3>\n                                                        <p>{val.start_hr}:{val.start_min} {val.start} - {val.end_hr}:{val.end_min} {val.end}</p>\n                                                    </div>\n                                                    {/* <div className=\"class-status\">\n                                                    <span>Active</span>\n                                                </div> */}\n                                                </div>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                                {/* <div className=\"class\">\n                                <div className=\"class-details\">\n                                    <h3>Introduction to Computer Science</h3>\n                                    <p>9:00 AM - 10:00 AM</p>\n                                </div>\n                                <div className=\"class-status\">\n                                    <span>Active</span>\n                                </div>\n                            </div>\n                            <div className=\"class\">\n                                <div className=\"class-details\">\n                                    <h3>Data Structures and Algorithms</h3>\n                                    <p>11:00 AM - 12:00 PM</p>\n                                </div>\n                                <div className=\"class-status\">\n                                    <span>Active</span>\n                                </div>\n                            </div> */}\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    <div className=\"dashboard-body\">\n                        <div className=\"dashboard-main\">\n                            <div className=\"personal-info\">\n                                <h2>Personal Information</h2>\n                                <div className=\"info-item\">\n                                    <span>Name:</span>\n                                    <span>{instname.current}</span>\n                                </div>\n                                <div className=\"info-item\">\n                                    <span>ID:</span>\n                                    <span>{instid.current}</span>\n                                </div>\n                                <div className=\"info-item\">\n                                    <span>Department:</span>\n                                    <span>{instdept.current}</span>\n                                </div>\n                                <button className=\"button2\" onClick={e => togglepopup(e)}>EDIT</button>\n                                <ReactModal\n                                    isOpen={editpopup}\n                                    ariaHideApp={false}\n                                    contentLabel=\"Example Modal\"\n                                >\n                                    <form className=\"form\">\n                                        <input\n                                            className=\"form__input\"\n                                            type=\"text\"\n                                            placeholder=\"Name\"\n                                            value={editname}\n                                            onChange={(e) => {\n                                                setEditName(e.target.value);\n                                            }}\n                                        />\n                                        <input\n                                            className=\"form__input\"\n                                            type=\"text\"\n                                            placeholder=\"Department Name\"\n                                            value={editdept}\n                                            onChange={(e) => {\n                                                setEditDept(e.target.value);\n                                            }}\n                                        />\n                                        <button className=\"button2\" onClick={e => editpersonalinfo(e)}>SUBMIT</button>\n                                        <button className=\"button2\" onClick={togglepopup}>CLOSE</button>\n                                    </form>\n                                </ReactModal>\n                            </div>\n                            <div className=\"courses\">\n                                <div>\n                                    <h2>Courses</h2>\n                                </div>\n                                <div className=\"courses-grid\">\n                                    {coursedata.current.map((val, key) => {\n                                        return (\n                                            <div key={key}>\n                                                <div className=\"course\" onClick={async () => {\n                                                    navigate(\"/\");\n                                                }}>\n                                                    <div className=\"course-details\">\n                                                        <h3>{val.title}, {val.dept_name}</h3>\n                                                        {/* <button className=\"button\">Hello</button>\n                                    <button className=\"edit-btn\" >GO</button> */}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                            <div className=\"today-classes\">\n                                <div>\n                                    <h2>Today's Classes</h2>\n                                    <p>No classes Today!</p>\n                                </div>\n                                {/* <div className=\"class\">\n                            <div className=\"class-details\">\n                                <h3>Introduction to Computer Science</h3>\n                                <p>9:00 AM - 10:00 AM</p>\n                            </div>\n                            <div className=\"class-status\">\n                                <span>Active</span>\n                            </div>\n                        </div>\n                        <div className=\"class\">\n                            <div className=\"class-details\">\n                                <h3>Data Structures and Algorithms</h3>\n                                <p>11:00 AM - 12:00 PM</p>\n                            </div>\n                            <div className=\"class-status\">\n                                <span>Active</span>\n                            </div>\n                        </div> */}\n                            </div>\n                        </div>\n                    </div>\n                :\n                <div className=\"dashboard-body\">\n                    <div className=\"dashboard-main\">\n                        <div className=\"personal-info\">\n                            <h2>Personal Information</h2>\n                            <div className=\"info-item\">\n                                <span>Name:</span>\n                                <span>{instname.current}</span>\n                            </div>\n                            <div className=\"info-item\">\n                                <span>ID:</span>\n                                <span>{instid.current}</span>\n                            </div>\n                            <div className=\"info-item\">\n                                <span>Department:</span>\n                                <span>{instdept.current}</span>\n                            </div>\n                            <button className=\"button2\" onClick={e => togglepopup(e)}>EDIT</button>\n                            <ReactModal\n                                isOpen={editpopup}\n                                ariaHideApp={false}\n                                contentLabel=\"Example Modal\"\n                            >\n                                <form className=\"form\">\n                                    <input\n                                        className=\"form__input\"\n                                        type=\"text\"\n                                        placeholder=\"Name\"\n                                        value={editname}\n                                        onChange={(e) => {\n                                            setEditName(e.target.value);\n                                        }}\n                                    />\n                                    <input\n                                        className=\"form__input\"\n                                        type=\"text\"\n                                        placeholder=\"Department Name\"\n                                        value={editdept}\n                                        onChange={(e) => {\n                                            setEditDept(e.target.value);\n                                        }}\n                                    />\n                                    <button className=\"button2\" onClick={e => editpersonalinfo(e)}>SUBMIT</button>\n                                    <button className=\"button2\" onClick={togglepopup}>CLOSE</button>\n                                </form>\n                            </ReactModal>\n                        </div></div></div>\n            :\n            <h2>Busss</h2>\n    )\n};",[],"/home/praneeth/DBIS/project/client/src/components/course.js",["73","74","75","76","77","78","79"],[],"/home/praneeth/DBIS/project/client/src/components/insights.js",["80"],[],{"ruleId":"81","severity":1,"message":"82","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":22,"column":9,"nodeType":"83","messageId":"84","endLine":22,"endColumn":23},{"ruleId":"81","severity":1,"message":"86","line":35,"column":9,"nodeType":"83","messageId":"84","endLine":35,"endColumn":13},{"ruleId":"81","severity":1,"message":"86","line":58,"column":9,"nodeType":"83","messageId":"84","endLine":58,"endColumn":13},{"ruleId":"81","severity":1,"message":"86","line":78,"column":9,"nodeType":"83","messageId":"84","endLine":78,"endColumn":13},{"ruleId":"81","severity":1,"message":"87","line":45,"column":13,"nodeType":"83","messageId":"84","endLine":45,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":78,"column":6,"nodeType":"90","endLine":78,"endColumn":27,"suggestions":"91"},{"ruleId":"81","severity":1,"message":"92","line":8,"column":12,"nodeType":"83","messageId":"84","endLine":8,"endColumn":20},{"ruleId":"81","severity":1,"message":"93","line":9,"column":12,"nodeType":"83","messageId":"84","endLine":9,"endColumn":16},{"ruleId":"81","severity":1,"message":"86","line":16,"column":13,"nodeType":"83","messageId":"84","endLine":16,"endColumn":17},{"ruleId":"81","severity":1,"message":"86","line":88,"column":17,"nodeType":"83","messageId":"84","endLine":88,"endColumn":21},{"ruleId":"81","severity":1,"message":"94","line":118,"column":11,"nodeType":"83","messageId":"84","endLine":118,"endColumn":17},{"ruleId":"81","severity":1,"message":"95","line":15,"column":20,"nodeType":"83","messageId":"84","endLine":15,"endColumn":31},{"ruleId":"81","severity":1,"message":"96","line":16,"column":20,"nodeType":"83","messageId":"84","endLine":16,"endColumn":31},{"ruleId":"81","severity":1,"message":"97","line":17,"column":10,"nodeType":"83","messageId":"84","endLine":17,"endColumn":19},{"ruleId":"81","severity":1,"message":"98","line":19,"column":11,"nodeType":"83","messageId":"84","endLine":19,"endColumn":22},{"ruleId":"81","severity":1,"message":"99","line":24,"column":11,"nodeType":"83","messageId":"84","endLine":24,"endColumn":25},{"ruleId":"81","severity":1,"message":"86","line":30,"column":17,"nodeType":"83","messageId":"84","endLine":30,"endColumn":21},{"ruleId":"81","severity":1,"message":"100","line":44,"column":9,"nodeType":"83","messageId":"84","endLine":44,"endColumn":18},{"ruleId":"81","severity":1,"message":"101","line":8,"column":9,"nodeType":"83","messageId":"84","endLine":8,"endColumn":17},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'passwordtoggle' is assigned a value but never used.","'wait' is assigned a value but never used.","'userdataset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userdetailsfetching'. Either include it or remove the dependency array.","ArrayExpression",["102"],"'roll_num' is assigned a value but never used.","'name' is assigned a value but never used.","'logout' is assigned a value but never used.","'setEditName' is assigned a value but never used.","'setEditDept' is assigned a value but never used.","'editpopup' is assigned a value but never used.","'togglepopup' is assigned a value but never used.","'editcourseinfo' is assigned a value but never used.","'infofetch' is assigned a value but never used.","'navigate' is assigned a value but never used.",{"desc":"103","fix":"104"},"Update the dependencies array to be: [Status, datafetched, userdetailsfetching]",{"range":"105","text":"106"},[2190,2211],"[Status, datafetched, userdetailsfetching]"]