{"ast":null,"code":"var _jsxFileName = \"/mnt/wsl/proact387/client/src/components/course.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Axios from 'axios';\nimport \"../style/instructor.css\";\nimport { useParams } from 'react-router-dom';\n\n// course details, instructors, number of students taking the course, deadlines\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Course() {\n  _s();\n  Axios.defaults.withCredentials = true;\n  let {\n    course_id\n  } = useParams();\n  var coursename = useRef(\"Name\");\n  var coursedept = useRef(\"Department\");\n  var [editname, setEditName] = useState(coursename.current);\n  var [editdept, setEditDept] = useState(coursedept.current);\n  var [editpopup, setEditPopup] = useState(false);\n  const togglepopup = async e => {\n    e.preventDefault();\n    setEditPopup(true);\n  };\n  const editcourseinfo = async e => {\n    e.preventDefault();\n    if (editname === \"\" || editdept === \"\") {\n      alert(\"None of the fields should be left empty\");\n      return 0;\n    } else {\n      var wait = Axios.post(\"/editcourseinfo\", {\n        editname: editname,\n        editdept: editdept\n      }).then(response => {\n        console.log(response);\n        if (response.data.message) {\n          alert(\"There seems to be a problem with our server. Please hang on while we fix it!\");\n        } else {\n          window.location.reload();\n        }\n      });\n    }\n  };\n  var infofetch = async () => {\n    var result = await Axios.post(\"/courseinfo\", {\n      course_id: course_id\n    }).then(response => {\n      return response;\n    });\n    if (result.data.message) {\n      alert(\"There seems to be a problem with our server. Please hang on while we fix it!\");\n      return 0;\n    } else if (result.data.courseerror) {\n      alert(\"Data corresponding to this course is not found!\");\n      return 0;\n    } else if (result.data.noinstructor) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this)\n  //     <div className=\"dashboard-body\">\n  //         <div className=\"dashboard-main\">\n  //             <div className=\"personal-info\">\n  //                 <h2>Course Information</h2>\n  //                 <div className=\"info-item\">\n  //                     <span>Name:</span>\n  //                     <span>{coursename.current}</span>\n  //                 </div>\n  //                 <div className=\"info-item\">\n  //                     <span>ID:</span>\n  //                     <span>{course_id}</span>\n  //                 </div>\n  //                 <div className=\"info-item\">\n  //                     <span>Department:</span>\n  //                     <span>{coursedept.current}</span>\n  //                 </div>\n  //                 <button className=\"button2\" onClick={togglepopup}>EDIT</button>\n  //                 <ReactModal\n  //                     isOpen={editpopup}\n  //                     ariaHideApp={false}\n  //                     contentLabel=\"Example Modal\"\n  //                 >\n  //                     <form className=\"form\">\n  //                         <input\n  //                             className=\"form__input\"\n  //                             type=\"text\"\n  //                             placeholder=\"Name\"\n  //                             value={editname}\n  //                             onChange={(e) => {\n  //                                 setEditName(e.target.value);\n  //                             }}\n  //                         />\n  //                         <input\n  //                             className=\"form__input\"\n  //                             type=\"text\"\n  //                             placeholder=\"Department Name\"\n  //                             value={editdept}\n  //                             onChange={(e) => {\n  //                                 setEditDept(e.target.value);\n  //                             }}\n  //                         />\n  //                         <button className=\"button2\" onClick={e => editcourseinfo(e)}>SUBMIT</button>\n  //                         <button className=\"button2\" onClick={togglepopup}>CLOSE</button>\n  //                     </form>\n  //                 </ReactModal>\n  //             </div>\n  //             <div className=\"courses\">\n  //                 <div>\n  //                     <h2>Courses</h2>\n  //                 </div>\n  //                 <div className=\"courses-grid\">\n  //                     {coursedata.current.map((val, key) => {\n  //                         return (\n  //                             <div key={key}>\n  //                                 <div className=\"course\" onClick={async () => {\n  //                                     gotocourse(val.course_id);\n  //                                 }}>\n  //                                     <div className=\"course-details\">\n  //                                         <h3>{val.title}, {val.dept_name}</h3>\n  //                                     </div>\n  //                                 </div>\n  //                             </div>\n  //                         );\n  //                     })}\n  //                 </div>\n  //             </div>\n  //             <div className=\"today-classes\">\n  //                 <div>\n  //                     <h2>Today's Classes</h2>\n  //                 </div>\n  //                 <div className=\"class-grid\">\n  //                     {today.current.map((val, key) => {\n  //                         return (\n  //                             <div key={key}>\n  //                                 <div className=\"class\">\n  //                                     <div className=\"class-details\">\n  //                                         <h3>{val.title}, {val.course_id}</h3>\n  //                                         <p>{val.start_hr}:{val.start_min} {val.start} - {val.end_hr}:{val.end_min} {val.end}</p>\n  //                                     </div>\n  //                                     {/* <div className=\"class-status\">\n  //                                 <span>Active</span>\n  //                             </div> */}\n  //                                 </div>\n  //                             </div>\n  //                         );\n  //                     })}\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     </div>\n  ;\n}\n_s(Course, \"fWDPHhOb1SmvTVjoqn3/5A9oDls=\", false, function () {\n  return [useParams];\n});\n_c = Course;\n;\nvar _c;\n$RefreshReg$(_c, \"Course\");","map":{"version":3,"names":["React","useRef","useState","Axios","useParams","jsxDEV","_jsxDEV","Course","_s","defaults","withCredentials","course_id","coursename","coursedept","editname","setEditName","current","editdept","setEditDept","editpopup","setEditPopup","togglepopup","e","preventDefault","editcourseinfo","alert","wait","post","then","response","console","log","data","message","window","location","reload","infofetch","result","courseerror","noinstructor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/mnt/wsl/proact387/client/src/components/course.js"],"sourcesContent":["import React, {useRef, useState} from 'react';\nimport Axios from 'axios';\nimport \"../style/instructor.css\";\nimport { useParams } from 'react-router-dom';\n\n// course details, instructors, number of students taking the course, deadlines\n\nexport default function Course() {\n\n    Axios.defaults.withCredentials = true;\n\n    let { course_id } = useParams();\n    var coursename = useRef(\"Name\");\n    var coursedept = useRef(\"Department\");\n    var [editname, setEditName] = useState(coursename.current);\n    var [editdept, setEditDept] = useState(coursedept.current);\n    var [editpopup, setEditPopup] = useState(false);\n\n    const togglepopup = async(e) => {\n        e.preventDefault();\n        setEditPopup(true);\n    }\n\n    const editcourseinfo = async(e)=>{\n        e.preventDefault();\n        if(editname===\"\" || editdept===\"\"){\n            alert(\"None of the fields should be left empty\");\n            return 0;\n        } else {\n            var wait = Axios.post(\"/editcourseinfo\",{\n                editname: editname,\n                editdept: editdept\n            }).then((response)=>{\n                console.log(response);\n                if(response.data.message){\n                    alert(\"There seems to be a problem with our server. Please hang on while we fix it!\");\n                } else{\n                    window.location.reload();\n                }\n            })\n        }\n    }\n    \n    var infofetch = async () =>{\n        var result = await Axios.post(\"/courseinfo\",{course_id:course_id}).then((response)=>{\n            return response;\n        });\n        if(result.data.message){\n            alert(\"There seems to be a problem with our server. Please hang on while we fix it!\");\n            return 0;\n        } else if(result.data.courseerror){\n            alert(\"Data corresponding to this course is not found!\");\n            return 0;\n        } else if(result.data.noinstructor){\n            \n        }\n    }\n\n    return (\n        <div>Hello</div>\n    //     <div className=\"dashboard-body\">\n    //         <div className=\"dashboard-main\">\n    //             <div className=\"personal-info\">\n    //                 <h2>Course Information</h2>\n    //                 <div className=\"info-item\">\n    //                     <span>Name:</span>\n    //                     <span>{coursename.current}</span>\n    //                 </div>\n    //                 <div className=\"info-item\">\n    //                     <span>ID:</span>\n    //                     <span>{course_id}</span>\n    //                 </div>\n    //                 <div className=\"info-item\">\n    //                     <span>Department:</span>\n    //                     <span>{coursedept.current}</span>\n    //                 </div>\n    //                 <button className=\"button2\" onClick={togglepopup}>EDIT</button>\n    //                 <ReactModal\n    //                     isOpen={editpopup}\n    //                     ariaHideApp={false}\n    //                     contentLabel=\"Example Modal\"\n    //                 >\n    //                     <form className=\"form\">\n    //                         <input\n    //                             className=\"form__input\"\n    //                             type=\"text\"\n    //                             placeholder=\"Name\"\n    //                             value={editname}\n    //                             onChange={(e) => {\n    //                                 setEditName(e.target.value);\n    //                             }}\n    //                         />\n    //                         <input\n    //                             className=\"form__input\"\n    //                             type=\"text\"\n    //                             placeholder=\"Department Name\"\n    //                             value={editdept}\n    //                             onChange={(e) => {\n    //                                 setEditDept(e.target.value);\n    //                             }}\n    //                         />\n    //                         <button className=\"button2\" onClick={e => editcourseinfo(e)}>SUBMIT</button>\n    //                         <button className=\"button2\" onClick={togglepopup}>CLOSE</button>\n    //                     </form>\n    //                 </ReactModal>\n    //             </div>\n    //             <div className=\"courses\">\n    //                 <div>\n    //                     <h2>Courses</h2>\n    //                 </div>\n    //                 <div className=\"courses-grid\">\n    //                     {coursedata.current.map((val, key) => {\n    //                         return (\n    //                             <div key={key}>\n    //                                 <div className=\"course\" onClick={async () => {\n    //                                     gotocourse(val.course_id);\n    //                                 }}>\n    //                                     <div className=\"course-details\">\n    //                                         <h3>{val.title}, {val.dept_name}</h3>\n    //                                     </div>\n    //                                 </div>\n    //                             </div>\n    //                         );\n    //                     })}\n    //                 </div>\n    //             </div>\n    //             <div className=\"today-classes\">\n    //                 <div>\n    //                     <h2>Today's Classes</h2>\n    //                 </div>\n    //                 <div className=\"class-grid\">\n    //                     {today.current.map((val, key) => {\n    //                         return (\n    //                             <div key={key}>\n    //                                 <div className=\"class\">\n    //                                     <div className=\"class-details\">\n    //                                         <h3>{val.title}, {val.course_id}</h3>\n    //                                         <p>{val.start_hr}:{val.start_min} {val.start} - {val.end_hr}:{val.end_min} {val.end}</p>\n    //                                     </div>\n    //                                     {/* <div className=\"class-status\">\n    //                                 <span>Active</span>\n    //                             </div> */}\n    //                                 </div>\n    //                             </div>\n    //                         );\n    //                     })}\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     </div>\n\n    )\n\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAChC,SAASC,SAAS,QAAQ,kBAAkB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAE7BL,KAAK,CAACM,QAAQ,CAACC,eAAe,GAAG,IAAI;EAErC,IAAI;IAAEC;EAAU,CAAC,GAAGP,SAAS,EAAE;EAC/B,IAAIQ,UAAU,GAAGX,MAAM,CAAC,MAAM,CAAC;EAC/B,IAAIY,UAAU,GAAGZ,MAAM,CAAC,YAAY,CAAC;EACrC,IAAI,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACU,UAAU,CAACI,OAAO,CAAC;EAC1D,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAACW,UAAU,CAACG,OAAO,CAAC;EAC1D,IAAI,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMmB,WAAW,GAAG,MAAMC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClBH,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMI,cAAc,GAAG,MAAMF,CAAC,IAAG;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAGT,QAAQ,KAAG,EAAE,IAAIG,QAAQ,KAAG,EAAE,EAAC;MAC9BQ,KAAK,CAAC,yCAAyC,CAAC;MAChD,OAAO,CAAC;IACZ,CAAC,MAAM;MACH,IAAIC,IAAI,GAAGvB,KAAK,CAACwB,IAAI,CAAC,iBAAiB,EAAC;QACpCb,QAAQ,EAAEA,QAAQ;QAClBG,QAAQ,EAAEA;MACd,CAAC,CAAC,CAACW,IAAI,CAAEC,QAAQ,IAAG;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAGA,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAC;UACrBR,KAAK,CAAC,8EAA8E,CAAC;QACzF,CAAC,MAAK;UACFS,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;QAC5B;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;EAED,IAAIC,SAAS,GAAG,MAAAA,CAAA,KAAW;IACvB,IAAIC,MAAM,GAAG,MAAMnC,KAAK,CAACwB,IAAI,CAAC,aAAa,EAAC;MAAChB,SAAS,EAACA;IAAS,CAAC,CAAC,CAACiB,IAAI,CAAEC,QAAQ,IAAG;MAChF,OAAOA,QAAQ;IACnB,CAAC,CAAC;IACF,IAAGS,MAAM,CAACN,IAAI,CAACC,OAAO,EAAC;MACnBR,KAAK,CAAC,8EAA8E,CAAC;MACrF,OAAO,CAAC;IACZ,CAAC,MAAM,IAAGa,MAAM,CAACN,IAAI,CAACO,WAAW,EAAC;MAC9Bd,KAAK,CAAC,iDAAiD,CAAC;MACxD,OAAO,CAAC;IACZ,CAAC,MAAM,IAAGa,MAAM,CAACN,IAAI,CAACQ,YAAY,EAAC,CAEnC;EACJ,CAAC;EAED,oBACIlC,OAAA;IAAAmC,QAAA,EAAK;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;EACd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAIJ;AAACrC,EAAA,CAlJuBD,MAAM;EAAA,QAINH,SAAS;AAAA;AAAA0C,EAAA,GAJTvC,MAAM;AAkJ7B;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}